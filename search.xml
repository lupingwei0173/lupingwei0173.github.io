<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTML、XHTML和HTML5区别</title>
    <url>/2020/06/02/HTML%E3%80%81XHTML%E5%92%8CHTML5%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>HTML基础(二)</title>
    <url>/2020/05/26/HTML%E5%9F%BA%E7%A1%80(%E4%BA%8C)/</url>
    <content><![CDATA[<p>一、HTML 块<br>大多数 HTML 元素被定义为块级元素或内联元素。</p>
<p>●HTML 块元素<br>块级元素在浏览器显示时，通常会以新行来开始（和结束）。<br>实例：<br>〈 h1〉, 〈 p〉, 〈 ul〉, 〈 table〉</p>
<p>●HTML 内联元素<br>内联元素在显示时通常不会以新行开始<br>例子：<br>〈 b〉, 〈 td〉, 〈 a〉, 〈 img〉</p>
<p>●HTML  〈 div〉元素<br>定义文档中的分区或节（division/section）<br>HTML 〈 div〉 元素是块级元素，它是可用于组合其他 HTML 元素的容器</p>
<p>●HTML 〈 span〉元素<br>用来组合文档中的行内元素<br>HTML 〈 span〉 元素是内联元素，可用作文本的容器</p>
<p>二、HTML 布局<br>●〈 header〉定义文档或节的页眉<br>●〈 nav〉定义导航链接的容器<br>●〈 section〉定义文档中的节<br>●〈 article〉定义独立的自包含文章<br>●〈 aside〉定义内容之外的内容（比如侧栏）<br>●〈 footer〉定义文档或节的页脚<br>●〈 details〉定义额外的细节<br>●〈 summary〉定义 details 元素的标题</p>
<p>三、HTML 响应式 Web 设计<br>使用 RWD<br>●RWD 指的是响应式 Web 设计（Responsive Web Design）<br>●RWD 能够以可变尺寸传递网页<br>●RWD 对于平板和移动设备是必需的</p>
<p>使用 Bootstrap<br>●另一个创建响应式设计的方法，是使用现成的 CSS 框架。<br>●Bootstrap 是最流行的开发响应式 web 的 HTML, CSS, 和 JS 框架。<br>●Bootstrap 帮助您开发在任何尺寸都外观出众的站点：显示器、笔记本电脑、平板电脑或手机</p>
<p>四、HTML 框架<br>框架结构标签〈 frameset〉<br>●框架结构标签（〈 frameset〉）定义如何将窗口分割为框架<br>●每个 frameset 定义了一系列行或列<br>●rows/columns 的值规定了每行或每列占据屏幕的面积<br>●不能将 〈 body〉〈 /body〉 标签与 〈 frameset〉〈 /frameset〉 标签同时使用<br>●假如添加包含一段文本的 〈 noframes〉 标签，就必须将这段文字嵌套于 〈 body〉〈 /body〉 标签内</p>
<p>框架标签〈 Frame〉<br>●Frame 标签定义了放置在每个框架中的 HTML 文档。<br>实例：<br>〈 frameset cols=”25%,75%”〉〈 frame src=”frame_a.htm”〉〈 frame src=”frame_b.htm”〉〈 /frameset〉<br>(注：cols设置占据浏览器窗口的比例， “frame_a.htm” 被置于第一个列中， “frame_b.htm” 被置于第二个列中)<br>●在 〈 frame〉 标签中加入：noresize=”noresize”,为不支持框架的浏览器添加 〈 noframes〉 标签</p>
<p>删除边框〈 Iframe〉<br>●frameborder 属性规定是否显示 iframe 周围的边框，属性值为 “0” 就可以移除边框<br>实例：<br>〈 iframe src=”demo_iframe.htm” frameborder=”0”〉〈 /iframe〉</p>
<p>●target 链接的属性必须引用 iframe 的 name 属性<br>实例<br>〈 iframe src=”demo_iframe.htm” name=”iframe_a”〉〈 /iframe〉〈 p〉〈 a href=”<a href="http://www.w3school.com.cn&quot;" target="_blank" rel="noopener">http://www.w3school.com.cn&quot;</a> target=”iframe_a”〉W3School.com.cn〈 /a〉〈 /p〉</p>
<p>五、HTML 背景<br>●背景颜色（Bgcolor）<br>背景颜色属性将背景设置为某种颜色。属性值可以是十六进制数、RGB 值或颜色名。<br>实例：<br>〈 body bgcolor=”#000000”〉<br>〈 body bgcolor=”rgb(0,0,0)”〉<br>〈 body bgcolor=”black”〉<br>以上的代码均将背景颜色设置为黑色。</p>
<p>●背景（Background）<br>背景属性将背景设置为图像，属性值为图像的URL<br>〈 body background=”clouds.gif”〉<br>〈 body background=”<a href="http://www.w3school.com.cn/clouds.gif&quot;〉" target="_blank" rel="noopener">http://www.w3school.com.cn/clouds.gif&quot;〉</a></p>
<p>六、HTML 脚本<br>●〈 script〉 标签用于定义客户端脚本<br>script 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。必需的 type 属性规定脚本的 MIME 类型。<br>实例：<br>〈 script type=”text/javascript”〉<br>document.write(“Hello World!”)<br>〈 /script〉</p>
<p>●〈 noscript〉 标签<br>〈 noscript〉 标签提供无法使用脚本时的替代内容，只有在浏览器不支持脚本或者禁用脚本时，才会显示 noscript 元素中的内容：<br>实例：<br>〈 script type=”text/javascript”〉<br>document.write(“Hello World!”)<br>〈 /script〉<br>〈 noscript〉Your browser does not support JavaScript!〈 /noscript〉</p>
<p>七、HTML 头部元素<br>HTML 〈 title〉<br>●〈 title〉 标签定义文档的标题<br>实例：<br>〈 !DOCTYPE html〉<br>〈 html〉<br>〈 head〉<br>〈 title〉Title of the document〈 /title〉<br>〈 /head〉<br>〈 body〉<br>The content of the document……<br>〈 /body〉<br>〈 /html〉<br>(注：title 元素能够：定义浏览器工具栏中的标题、提供页面被添加到收藏夹时显示的标题、显示在搜索引擎结果中的页面标题)</p>
<p>HTML 〈 base〉<br>●〈 base〉 标签为页面上的所有链接规定默认地址或默认目标（target）<br>实例:<br>〈 head〉<br>〈 base href=”<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">www.baidu.com&quot;</a> /〉<br>〈 base target=”_blank” /〉<br>〈 /head〉<br>〈 body〉<br>〈 img src=”eg_smile.gif” /〉<br>〈 a href=”<a href="https://finance.sina.com.cn/&quot;〉sina〈" target="_blank" rel="noopener">https://finance.sina.com.cn/&quot;〉sina〈</a> /a〉<br>〈 /body〉</p>
<p>HTML 〈 link〉<br>●〈 link〉 标签定义文档与外部资源之间的关系。<br>实例：<br>〈 head〉〈 link rel=”stylesheet” type=”text/css” href=”mystyle.css” /〉〈 /head〉</p>
<p>HTML 〈 style〉<br>●〈 style〉 标签用于为 HTML 文档定义样式信息。<br>实例：<br>〈 head〉<br>〈 style type=”text/css”〉<br>body {background-color:yellow}<br>p {color:blue}<br>〈 /style〉<br>〈 /head〉</p>
<p>HTML 〈 meta〉<br>●〈 meta〉 标签提供关于 HTML 文档的元数据。元数据不会显示在页面上，但是对于机器是可读的。<br>实例：<br>下面的 meta 元素定义页面的描述：<br>〈 meta name=”description” content=”Free Web tutorials on HTML, CSS, XML” /〉</p>
<p>下面的 meta 元素定义页面的关键词<br>〈 meta name=”keywords” content=”HTML, CSS, XML” /〉<br>(注：〈 meta〉 标签始终位于 head 元素中，name 和 content 属性的作用是描述页面的内容)<br>(注：通常meta 元素被用于规定页面的描述、关键词、文档的作者、最后修改时间以及其他元数据）<br>(注：一些搜索引擎会利用 meta 元素的 name 和 content 属性来索引您的页面)</p>
<p>HTML 〈 script〉<br>●〈 script〉 标签用于定义客户端脚本，比如 JavaScript。<br>我们会在稍后的章节讲解 script 元素。</p>
<p>八、HTML 字符实体<br>●实体字符<br>HTML中不能使用〈 〉,这是因为浏览器会误认为它们是标签。<br>如果想正确地显示预留字符，则需要使用字符实体<br>字符实体类似这样：<br>&entity_name;</p>
<p>●不间断空格<br>HTML 中的常用字符实体是不间断空格(&nbsp;)<br>浏览器总是会截短 HTML 页面中的空格。如果您在文本中写 10 个空格，在显示该页面之前，浏览器会删除它们中的 9 个。<br>如需在页面中增加空格的数量，您需要使用 &nbsp; 字符实体</p>
<p>●统一资源定位器<br><a href="http://www.w3school.com.cn/html/index.asp，遵守以下的语法规则：" target="_blank" rel="noopener">http://www.w3school.com.cn/html/index.asp，遵守以下的语法规则：</a><br>scheme://host.domain:port/path/filename<br>解释：<br>scheme - 定义因特网服务的类型。最常见的类型是 http<br>host - 定义域主机（http 的默认主机是 www）<br>domain - 定义因特网域名，比如 w3school.com.cn<br>:port - 定义主机上的端口号（http 的默认端口号是 80）<br>path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。<br>filename - 定义文档/资源的名称<br><img src="/2020/05/26/HTML基础(二)/1.png" alt></p>
<p>●URL 编码<br>URL 只能使用 ASCII 字符集来通过因特网进行发送。<br>由于 URL 常常会包含 ASCII 集合之外的字符，URL 必须转换为有效的 ASCII 格式。<br>URL 编码使用 “%” 其后跟随两位的十六进制数来替换非 ASCII 字符。<br>URL 不能包含空格。URL 编码通常使用 + 来替换空格。<br><img src="/2020/05/26/HTML基础(二)/2.png" alt></p>
<p>●〈 !DOCTYPE〉 声明<br>〈 !DOCTYPE〉 不是 HTML 标签。它为浏览器提供一项信息(声明)即 HTML 是用什么版本编写的。<br>实例：<br>〈 !DOCTYPE html〉</p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>web前端之HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础(一)</title>
    <url>/2020/05/21/HTML%E5%9F%BA%E7%A1%80(%E4%B8%80)/</url>
    <content><![CDATA[<p>什么是 HTML？<br>HTML 是用来描述网页的一种语言，是超文本标记语言 (Hyper Text Markup Language)</p>
<p>HTML 文档 = 网页<br>●文档描述网页<br>●文档包含 HTML 标签和纯文本<br>●文档也被称为网页<br>Web浏览器的作用是读取HTML文档，并以网页的形式显示出它们。浏览器不会显示HTML标签，而是使用标签来解释页面的内容<br>浏览器在显示 HTML 时，会省略源代码中多余的空白字符（空格或回车等）。</p>
<p>〈 !DOCTYPE html〉</p>
<p>一、HTML 标签<br>●HTML 标签是由尖括号包围的关键词，比如 〈html〉<br>●HTML 标签通常是成对出现的，比如 〈P〉和 〈/P〉<br>●标签对中的第一个标签是开始标签，第二个标签是结束标签<br>●开始和结束标签也被称为开放标签和闭合标签</p>
<p>二、HTML 元素<br>●HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。<br>●HTML 元素以开始标签起始，以结束标签终止<br>●HTML 元素的内容是开始标签与结束标签之间的内容<br>●HTML 元素具有空内容，没有内容的HTML元素被称为空元素,空元素在开始标签中进行关闭。(注：〈br/〉 就是没有关闭标签的空元素，标签定义为换行)</p>
<p>三、HTML 属性<br>●HTML 标签可以拥有属性，属性提供了有关 HTML 元素的更多的信息。<br>●属性总是以名称/值对的形式出现，实例：name=”value”。<br>●属性总是在 HTML 元素的开始标签中规定。实例：〈a href=”<a href="https://www.baidu.com&quot;〉This" target="_blank" rel="noopener">https://www.baidu.com&quot;〉This</a> is a link〈/a〉  (注：在 href 属性中指定链接的地址)<br>●属性和属性值对大小写无要求，但建议使用小写<br>●属性值应该始终被包括在引号内。双引号是最常用的，也可使用单引号(注：如果属性值本身就包含双引号，则必须使用单引号.实例：name=’Bill “HelloWorld” Gates’)</p>
<p>四、HTML 标签的定义<br>HTML 文档<br>●通过〈html〉标签定义HTML文档<br>实例：<br>〈 html〉 〈/html〉</p>
<p>HTML 文档的主体<br>●通过〈body〉标签定义文档的主体。<br>实例：<br>〈body〉 〈/body〉</p>
<p>HTML 标题<br>●通过 〈h1〉-〈h6〉标签定义标题，呈现了六个不同的级别的标题，〈h1〉 级别最高，而 〈h6〉 级别最低。<br>实例:<br>〈h1〉This is a heading〈/h1〉<br>〈h2〉This is a heading〈/h2〉<br>(注：浏览器会自动地在标题的前后添加空行。)</p>
<p>HTML 水平线<br>●通过〈hr/〉标签在HTML页面中创建水平线。<br>实例：<br>〈p〉This is a paragraph〈/p〉<br>〈hr/〉<br>〈p〉This is a paragraph〈/p〉</p>
<p>HTML 注释<br>●通过〈！– 注释内容 –〉可以将注释插入 HTML 代码中，浏览器会忽略注释，也不会显示它们，注释也可以加一些条件来进行注释<br>实例：<br>〈！–我是一个注释，我不显示 –〉</p>
<p>HTML 段落<br>●通过〈p〉 标签定义段落(浏览器会自动地在段落的前后添加空行)<br>实例：<br>〈p〉This is a paragraph〈/p〉<br>〈p〉This is another paragraph〈/p〉</p>
<p>HTML 折行<br>●通过〈br /〉 标签定义在不产生一个新段落的情况下进行换行(注：〈br/〉 元素是一个空的HTML元素，没有结束标签）<br>实例：<br>〈p〉This is〈br/〉a para〈br/〉graph with line breaks〈/p〉</p>
<p>五、HTML 属性<br>HTML style 属性<br>●style属性用于改变HTML元素的样式。<br>实例：<br>〈p style=”font-family:verdana”〉This text is in Verdana〈/p〉(font-family 属性为字体系列）<br>〈p style=”color:red”〉This text is in red〈/p〉(color 属性为文本颜色）<br>〈p style=”font-size:20pt”〉This text is in 20pt〈/p〉(font-size 属性为字体尺寸,单位有：pt、px、%、em)<br>〈p style=”background-color:green”〉This is a paragraph.〈/p〉(background-color 属性为背景颜色：)<br>〈p style= “text-align:center”〉Text is aligned to the center of this page〈/p〉(text-align 属性为文本的水平对齐方式）</p>
<p>六、HTML 文本格式化标签<br>HTML 大号字<br>●通过〈big〉标签定义大号字<br>实例：<br>〈big〉This text is big〈/big〉</p>
<p>HTML 小号字<br>●通过〈small〉标签定义小号字<br>实例：<br>〈small〉This text is small〈small〉</p>
<p>HTML 粗体文本<br>●通过〈b〉 标签定义粗体文本<br>实例：<br>〈b〉This text is bold〈/b〉</p>
<p>HTML 加重语气<br>●通过〈strong〉 标签定义加重语气<br>实例：<br>〈strong〉This text is strong〈/strong〉 (浏览器中表现为字体加粗，但实际也可以为下滑线等，作为强调与〈b〉不同)</p>
<p>HTML 着重文字<br>●通过〈em〉 标签定义着重文字<br>实例：<br>〈p〉This〈em〉text〈/em〉 is emphasized〈/p〉(浏览器中表现为斜体，〈em〉 用来局部强调，〈strong〉 则是全局强调）</p>
<p>HTML 斜体字<br>●通过〈i〉标签定义斜体字<br>实例：<br>〈i〉This text is italic〈/i〉</p>
<p>HTML 上标字<br>●通过〈sup〉标签定义上标字<br>实例:<br>〈sup〉superscript〈/sup〉</p>
<p>HTML 下标字<br>●通过〈sub〉标签定义下标字<br>实例:<br>〈sub〉superscript〈/sub〉</p>
<p>HTML 插入字<br>●通过〈ins〉标签定义插入字<br>实例：<br>〈p〉a〈ins〉b〈/ins〉c〈/p〉(html表现为下划线)</p>
<p>HTML 删除字<br>●通过〈del〉标签定义插入字<br>实例：<br>〈del〉a〈ins〉b〈/ins〉c〈/p〉(html表现为中划线)</p>
<p>六、HTML 引用标签<br>HTML 短引用<br>●通过〈q〉 标签定义短引用<br>实例：<br>〈p〉我们的目标是：〈q〉没有蛀牙！〈/q〉〈/p〉(浏览器通常会为〈q〉 元素包围引号)</p>
<p>HTML 长引用的<br>●通过〈blockquote〉 标签定义长引用<br>实例：<br>浏览器通常会对〈blockquote〉 元素进行缩进处理。<br>〈blockquote〉This is a blood〈/blockquote〉(浏览器通常会对〈blockquote〉 元素进行缩进处理)</p>
<p>HTML 缩略词<br>●通过〈abbr〉标签定义缩写或首字母缩略语<br>实例:<br>〈p〉〈abbr title =”Most Valuable Player”〉MVP〈/abbr〉 is Kobe〈/p〉</p>
<p>HTML 联系信息<br>●通过〈address〉 标签定义文档或文章的联系信息（作者/拥有者）<br>实例：<br>〈address〉<br>Written by Donald Duck.〈br〉<br>Visit us at:〈br〉<br>Example.com〈br〉<br>Box 564, Disneyland〈br〉<br>USA<br>〈/address〉</p>
<p>HTML 著作标题<br>●通过〈cite〉 标签定义著作的标题<br>实例：<br>〈p〉〈cite〉The Scream〈/cite〉 by Edward Munch. Painted in 1893.〈/p〉(浏览器通常会以斜体显示〈cite〉 元素)</p>
<p>HTML 双向重写<br>●通过〈bdo〉<br>实例：<br>〈bdo dir=”rtl”〉This text will be written from right to left〈/bdo〉(〈bdo〉 用于覆盖当前文本方向)</p>
<p>七、HTML 计算机代码标签<br>HTML 键盘格式<br>●通过〈kbd〉标签定义键盘输入<br>实例：<br>〈p〉To open a file, select:〈/p〉<br>〈p〉〈kbd〉File | Open…〈/kbd〉〈/p〉</p>
<p>HTML 样本格式<br>●通过〈samp〉标签定义计算机输出<br>实例：<br>〈samp〉<br>demo.example.com login: Apr 12 09:10:17<br>Linux 2.6.10-grsec+gg3+e+fhs6b+nfs+gr0501+++p3+c4a+gr2b-reslog-v6.189<br>〈/samp〉</p>
<p>HTML 代码格式<br>●通过〈code〉标签定义编程代码<br>〈code〉<br>var person = {<br>    firstName:”Bill”,<br>    lastName:”Gates”,<br>    age:50,<br>    eyeColor:”blue”<br>}<br>〈/code〉<br>(注：不保留多余的空格和折行）</p>
<p>〈code〉<br>〈pre〉<br>var person = {<br>    firstName:”Bill”,<br>    lastName:”Gates”,<br>    age:50,<br>    eyeColor:”blue”<br>}<br>〈/pre〉<br>〈/code〉<br>(注：保留原有的空格和折行）</p>
<p>HTML 变量格式化<br>●通过〈var〉 标签定义数学变量<br>实例：<br>〈p〉〈var〉E = m c〈sup〉2〈/sup〉〈/var〉〈/p〉</p>
<p>HTML CSS<br>●外部样式表(注：过更改一个文件来改变整个站点的外观)<br>〈head〉 〈link rel=”stylesheet” type=”text/css” href=”mystyle.css”〉 〈/head〉</p>
<p>●内部样式表(注：可以在head部分通过 〈style〉 标签来改变单个文件的样式)<br>〈head〉〈style type=”text/css”〉body {background-color: red}〈/style〉〈/head〉</p>
<p>●内联样式表<br>〈p style=”color: red; margin-left: 20px”〉This is a paragraph〈/p〉(注：可以使用内联样式改变个别元素)</p>
<p>七、HTML 超链接<br>HTML 链接语法<br>实例：<br>〈a href=”<a href="https://www.baidu.com&quot;〉百度〈/a〉(注：href为链接的目标，开始和结束标签之间的文字被作为超级链接来显示)" target="_blank" rel="noopener">https://www.baidu.com&quot;〉百度〈/a〉(注：href为链接的目标，开始和结束标签之间的文字被作为超级链接来显示)</a></p>
<p>HTML 超链接-target<br>实例：<br>〈a href=”<a href="http://www.w3school.com.cn/&quot;" target="_blank" rel="noopener">http://www.w3school.com.cn/&quot;</a> target=”_blank”〉Visit W3School!〈/a〉 (注：使用Target属性，可定义被链接的文档在何处显示。blank为新打开一个窗口显示)</p>
<p>HTML 链接-name 属性<br>实例：<br>〈a name=”tips”〉基本的注意事项 - 有用的提示〈/a〉(注：HTML 文档中对锚进行命名，创建一个书签)<br>〈a href=”#tips”〉有用的提示〈/a〉(注：在同一个文档中创建指向该锚的链接)<br>或<br>〈a href=”<a href="https://www.baidu.com&quot;〉有用的提示〈/a〉" target="_blank" rel="noopener">https://www.baidu.com&quot;〉有用的提示〈/a〉</a></p>
<p>八、HTML 图像<br>图像由标签〈img〉和属性组成<br>●src 源属性(注：〈img〉为空标签，src则为源属性)<br>实例：<br>〈img src=”../photo/0.jpg” /〉 (注：src为html所在路径，../表示上一级目录，photo表示图片所在文件夹，同src同级)<br>〈img src=”0.jpg” /〉 (注：src为html所在路径，图片也放在src文件夹)<br>〈img src=”photo/0.jpg”/〉 (注：src为html所在路径，photo为src下放图片的文件夹)<br>〈img src=”D://TEST/0.jpg”/〉(注：src为html所在路径，photo为d盘下放图片的文件夹)</p>
<p>●Alt 替换文本属性<br>实例：<br>〈img src=”photo/0.jpg” alt=”Big Boat”〉(注：浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息)</p>
<p>●background 背景图片属性<br>实例：<br>〈body background=”photo/0.jpg”〉</p>
<p>●align 排列图片属性<br>实例：<br>〈p〉〈img src=”photo/0.jpg” align=”bottom”〉 在文本中〈/p〉(注：bottom 对齐方式是默认的对齐方式)<br>〈p〉〈img src =”photo/0.jpg” align=”middle”〉 在文本中〈/p〉(注：middle 对齐方式是居中的对齐方式)<br>〈p〉〈img src =”photo/0.jpg” align=”top”〉 在文本中〈/p〉(注：top 对齐方式是上对齐方式)<br>〈p〉〈img src =”photo/0.jpg” align =”left”〉 在文本中〈/p〉(注：带图像段落left图像将浮动到文本的左侧)<br>〈p〉〈img src =”photo/0.jpg” align =”right”〉在文本中〈/p〉(注：带图像段落right图像将浮动到文本的右侧)</p>
<p>● width height图像尺寸属性<br>实例：<br>〈img src=”photo/0.jpg” width=”500” height=”344”  /〉 (注：src为html所在路径，photo为src下放图片的文件夹)</p>
<p>● href制作图像链接<br>实例：<br>〈p〉〈a href=”/example/html/lastpage.html”〉〈img border=”0” src=”/i/eg_buttonnext.gif” /〉〈/a〉〈/p〉(注：把图像作为链接来使用)</p>
<p>●〈map〉创建图像映射<br>实例：<br>〈a href=”/example/html/html_ismap.html”〉〈img src=”/i/eg_planets.jpg” ismap /〉〈/a〉(注：如何把一幅普通的图像设置为图像映射)</p>
<p>九、HTML 表格<br>●表格由〈table〉标签定义(通常〈table〉、〈tr〉、〈td〉组合使用)<br>实例：<br>〈table border=”1”〉 〈/table〉(注：〈table〉 标签定义表格)</p>
<p>●表格行数由〈tr〉标签定义<br>实例：<br>〈tr〉〈td〉row 2, cell 1〈/td〉〈td〉row 2, cell 2〈/td〉〈/tr〉(注：每个表格均有若干行（由 〈tr〉 标签定义）</p>
<p>●数据单元格的内容由〈td〉标签定义<br>实例：<br>〈td〉row 2, cell 1〈/td〉〈td〉row 2, cell 2〈/td〉(注：每行被分割为若干单元格（由 〈td〉 标签定义,数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等)</p>
<p>●表格的表头由〈th〉<br>实例：<br>〈tr〉〈th〉Heading〈/th〉〈th〉Another Heading〈/th〉〈/tr〉(注：大多数浏览器会把表头显示为粗体居中的文本）</p>
<p>●表格和边框属性 border<br>实例：<br>〈table border=”1”〉〈tr〉〈td〉Row 1, cell 1〈/td〉〈td〉Row 1, cell 2〈/td〉〈/tr〉〈/table〉</p>
<p>十、HTML 列表<br>●无序列表始于 〈ul〉 标签，每个列表项始于 〈li〉<br>实例：<br>〈ul〉〈li〉coffee〈/li〉〈li〉water〈/li〉〈/ul〉(注：列表项内部可以使用段落、换行符、图片、链接以及其他列表等等)</p>
<p>●不同类型无序列表使用type属性<br>实例：<br>〈ul type=”square”〉〈li〉coffee〈/li〉〈li〉water〈/li〉〈/ul〉(</p>
<p>●有序列表始于 〈ol〉 标签，每个列表项始于 〈li〉<br>实例：<br>〈ol〉〈li〉coffee〈/li〉〈li〉water〈/li〉〈/ol〉(注：列表项内部可以使用段落、换行符、图片、链接以及其他列表等等)</p>
<p>●不同类型有序列表使用type属性<br>〈ol type=”square”〉〈li〉coffee〈/li〉〈li〉water〈/li〉〈/ol〉</p>
<p>●自定义列表以 〈dl〉 标签开始，每个自定义列表项以 〈dt〉 开始，每个自定义列表项的定义以 〈dd〉 开始<br>〈dl〉〈dt〉★〈/dt〉〈dd〉coffee〈/dd〉〈dt〉★〈/dt〉〈dd〉water〈/dd〉〈dl〉</p>
<p>●嵌套列表<br>实例：<br>〈ul〉〈li〉咖啡〈/li〉〈li〉茶〈ul〉〈li〉红茶〈/li〉〈li〉绿茶〈/li〉〈/ul〉〈/li〉〈li〉牛奶〈/li〉〈/ul〉</p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>web前端之HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈Fiddler</title>
    <url>/2020/05/14/%E6%B5%85%E8%B0%88Fiddler/</url>
    <content><![CDATA[<p>一、什么是Fiddler？<br>网络项目的开发和测试中，Fiddler是强大的抓包工具，它的原理是以web代理服务器的形式进行工作的。</p>
<p>代理就是在客户端和服务器之间设置一道关卡，客户端先将请求数据发送出去后，代理服务器会将数据包进行拦截，代理服务器再冒充客户端发送数据到服务器;<br>同理，服务器将响应数据返回，代理服务器也会将数据拦截，再返回给客户端。</p>
<p>二、Fiddler工作原理<br>Fiddler是以代理web服务器的形式工作的,它使用代理地址:127.0.0.1,端口:8888。<br>当Fiddler启动后将自己变成一个代理服务器,这个代理服务器默认监听127.0.0.1:8888，然后打开IE的时候，IE浏览器会以127.0.0.1:8。<br>退出的时候它会自动注销代理，这样就不会影响别的程序。不过如果Fiddler非正常退出，这时候因为Fiddler没有自动注销，会造成网页无法访问。</p>
<p>首先fiddler截获客户端浏览器发送给服务器的https请求，此时还未建立握手。</p>
<p>第一步    fiddler向服务器发送请求进行握手，获取到服务器的CA证书，用根证书公钥进行解密，验证服务器数据签名，获取到服务器CA证书公钥。</p>
<p>第二步    fiddler伪造自己的CA证书，冒充服务器证书传递给客户端浏览器，客户端浏览器做跟fiddler一样的事。</p>
<p>第三步    客户端浏览器生成https通信用的对称密钥，用fiddler伪造的证书公钥加密后传递给服务器，被fiddler截获。</p>
<p>第四步    fiddler将截获的密文用自己伪造证书的私钥解开，获得https通信用的对称密钥。</p>
<p>第五步    fiddler将对称密钥用服务器证书公钥加密传递给服务器，服务器用私钥解开后建立信任，握手完成，用对称密钥加密消息，开始通信。</p>
<p>第六步    fiddler接收到服务器发送的密文，用对称密钥解开，获得服务器发送的明文。再次加密，发送给客户端浏览器。</p>
<p>第七步    客户端向服务器发送消息，用对称密钥加密，被fidller截获后，解密获得明文。</p>
<p>由于fiddler一直拥有通信用对称密钥，所以在整个https通信过程中信息对其透明。</p>
<p>三、Fiddler的配置及使用<br>Fiddler要能进行抓包，需要确保Capture Traffic是开启的（安装后是默认开启的），勾选File-&gt;Capture Traffic，也可以直接点击Fiddler界面左下角的图标开启和关闭抓包。<br><img src="/2020/05/14/浅谈Fiddler/1.png" alt><br>如果想抓HTTPS的请求，Fiddler需要做如下的设置<br>Tools –&gt; Options ，然后按下图进行勾选，<br>将Fiddler正式安装在电脑上，点Action–&gt; Trust Root Certificate–&gt; Yes ,一步步确定<br><img src="/2020/05/14/浅谈Fiddler/2.png" alt><br>如果使用IE则代理不需要配置，其他浏览器都需要配置代理，否则Fiddler抓不了包。以Chrome浏览器为例，需要配置代理，fiddler才能抓到包。<br><img src="/2020/05/14/浅谈Fiddler/3.png" alt></p>
<p>四、手机的配置(Android)</p>
<p>先设置到代理，电脑需要连接WIFI，手机与电脑连接相同的WIFI，路径：设置 – &gt;已连接的WIFI –&gt;高级设置–&gt;代理：<br>代理服务器主机名的获取，cmd –&gt; ipconfig –&gt; IPv4 地址对应的 IP就是代理服务器主机名<br><img src="/2020/05/14/浅谈Fiddler/4.png" alt><br>Fiddler上再进行如下配置<br>路径： Tools –&gt; Options –&gt; 勾选：Allow remote Computers to connect<br><img src="/2020/05/14/浅谈Fiddler/5.png" alt><br>手机要能够正常抓包，还需要安装证书，在手机浏览器里输入：（代理服务器地址：端口号）<br><img src="/2020/05/14/浅谈Fiddler/6.png" alt><br><img src="/2020/05/14/浅谈Fiddler/7.png" alt><br>五、Fiddler数据包分析</p>
<p>#：顺序号，按照抓包的顺序从1递增</p>
<p>Result：HTTP状态码　　　　　　</p>
<p>Protocol：请求使用的协议，如HTTP/HTTPS/FTP等</p>
<p>HOST：请求地址的主机名或域名</p>
<p>URL：请求资源的位置</p>
<p>Body：请求大小</p>
<p>Caching：请求的缓存过期时间或者缓存控制值</p>
<p>Content-Type：请求响应的类型</p>
<p>Process：发送此请求的进程ID</p>
<p>Comments：备注 </p>
<p>Custom：自定义值<br><img src="/2020/05/14/浅谈Fiddler/8.png" alt><br><img src="/2020/05/14/浅谈Fiddler/9.png" alt><br><img src="/2020/05/14/浅谈Fiddler/10.png" alt></p>
<p>Request Header（请求头域）<br><img src="/2020/05/14/浅谈Fiddler/11.png" alt><br>请求方式：GET<br>协议：HTTP/1.1</p>
<ol>
<li><p>Cache 头域<br>if-Modified-since：缓存<br>if-None-Match：可提高性能（在Response中添加ETag信息，客户端再次请求资源，Request中加入if-None-Match（ETag的值），服务器验证ETag，若没改变返回状态码304，有改变，返回状态码200）<br>Pragma：防止页面被缓存<br>Cache-Control：Response—Request遵循的缓存机制<br>public：可以被任何缓存所缓存<br>private:内容只缓存在私有缓存中<br>no-cache：所有内容都不会被缓存</p>
</li>
<li><p>Client 头域<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36 （告知服务器客户端使用的操作系统与浏览器的名称和版本）<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,<em>/</em>;q=0.8 （浏览器端可以接受的媒体、文件类型）<br>Accept-Encoding: gzip, deflate （指定压缩方法，是否支持压缩，支持什么压缩方法（gzip、deflate））<br>Accept-Language: zh-CN,zh;q=0.9 （浏览器申明自己的接收语言）<br>Accept-chareset：（浏览器申明自己接收的字符集。如gb2312，UTF_8）</p>
</li>
<li><p>Cookies 头域<br>有的请求不发送Cookies,有的请求有Cookies。<br>目的：将cookie值发送给服务器</p>
</li>
<li><p>Entity头域<br>Content-Length：发送给HTTP服务器的数据长度<br>Content-Type：决定文件接收方将以什么形式、什么编码读取此文件</p>
</li>
<li><p>Security 头域：<br>Upgrade-Insecure-Requests: 1</p>
</li>
<li><p>Transport 头域：<br>Host: uat.casserver.yxqiche.com（Host：发送请求时，该报头域是必需的。主要用于指定被请求资源的Internet主机和端口号，通常从HTTP URL 中提取出来）<br>Proxy-Connection:keep-alive（Connection：当网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接是否关闭。keep-alive表示不会关闭，客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接；close表示关闭，客户端再次访问这个服务器上的网页，需要重新建立连接。）<br>connection：Keep—alive            TCP连接不会关闭<br>connection：close                 一个Request完成后，TCP连接关闭</p>
</li>
<li><p>Miscellaneous头域<br>Referer：提供了Request的上下文信息，告诉服务器我是从哪个链接过来的   A——&gt;B（B的服务器从Referer中统计有多少用户是从A过来的）</p>
</li>
</ol>
<p>Response Header（响应头域）<br>![](12.png）</p>
<ol>
<li><p>Cache头域<br>Date：生成消息的具体时间和日期<br>Expires：浏览器在指定过期时间内使用本地缓存</p>
</li>
<li><p>Cookie/Login头域<br>P3P：用户跨域设置cookie，可以解决iframe跨域访问cookie的问题<br>Set-Cookie：重要的header，用于把cookie发送到客户端浏览器，每一个写入cookie都会生成一个set-cookie</p>
</li>
<li><p>Entity头域<br>ETag：与if-None-Match配合使用<br>Last-Modified：用于指示资源的最后修改日期和时间<br>Content-Type：Web服务器告知浏览器自己响应对象的类型和字符集<br>Content-Length：指明实体正文长度，以字节方式存储的十进制数字表示。在数据下行中，要预先在服务器中缓存所有数据，然后所有数据一并发给客户端<br>Content-Encoding：Web服务器表明自己用了什么压缩方式（gzip、deflate）压缩响应中的对象<br>Content-Language：服务器告知浏览器自己响应的对象语言</p>
</li>
<li><p>Miscellaneous头域<br>Server：指明HTTP服务器的软件信息<br>X-Powered-By：表明网站是用什么技术开发的<br>X-AspNet-Version：如果网站是用Asp/Net开发的，这个header用来表明Asp/Net的版本</p>
</li>
<li><p>Transport头域<br>connection：Keep—alive            TCP连接不会关闭<br>connection：close                 一个Request完成后，TCP连接关闭</p>
</li>
<li><p>Location头域<br>Location：用于重定向一个新的位置，包括新的URL地址<br>HTTP认证过程</p>
</li>
<li><p>客户端发送HTTP Request给服务器；</p>
</li>
<li><p>Request中未包含Authorization header，服务器会返回一个401错误给客户端，且在Response中的header“www-Authenticate”中添加信息；</p>
</li>
<li><p>客户端将用户名和密码以base64加密后，放在Authorization中发送给服务器，认证成功；</p>
</li>
<li><p>服务器将Authorization header中的用户名和密码去除，进行验证。如果验证通过，将根据请求发送资源给客户端；</p>
</li>
</ol>
<p>HTTP OAuth认证：OAuth对于http来说，就是放在Authorization header中的不是用户名密码，而是一个token（令牌）。<br>客户端的使用：客户端若要跟“使用基本认证的网站”进行交互，将用户名密码加载Authorization header中即可。<br>当用户试图通过 HTTP 访问一台正在运行 Internet 信息服务 (IIS) 的服务器上的内容时，IIS 返回一个表示该请求的状态的数字代码。状态代码可以指明具体请求是否已成功，还可以揭示请求失败的确切原因。</p>
<p>1xx - 信息提示<br>这些状态代码表示临时的响应。客户端在收到常规响应之前，应准备接收一个或多个 1xx 响应。<br>· 100 - Continue 初始的请求已经接受，客户应当继续发送请求的其余部分。（HTTP 1.1新）<br>· 101 - Switching Protocols 服务器将遵从客户的请求转换到另外一种协议（HTTP 1.1新）</p>
<p>2xx - 成功<br>这类状态代码表明服务器成功地接受了客户端请求。<br>· 200 - OK 一切正常，对GET和POST请求的应答文档跟在后面。<br>· 201 - Created 服务器已经创建了文档，Location头给出了它的URL。<br>· 202 - Accepted 已经接受请求，但处理尚未完成。<br>· 203 - Non-Authoritative Information 文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝，非权威性信息（HTTP 1.1新）。<br>· 204 - No Content 没有新文档，浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。<br>· 205 - Reset Content 没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容（HTTP 1.1新）。<br>· 206 - Partial Content 客户发送了一个带有Range头的GET请求，服务器完成了它（HTTP 1.1新）。</p>
<p>3xx - 重定向<br>客户端浏览器必须采取更多操作来实现请求。例如，浏览器可能不得不请求服务器上的不同的页面，或通过代理服务器重复该请求。<br>· 300 - Multiple Choices 客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。如果服务器要提出优先选择，则应该在Location应答头指明。<br>· 301 - Moved Permanently 客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL。<br>· 302 - Found 类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。注意，在HTTP1.0中对应的状态信息是“Moved Temporatily”。出现该状态代码时，浏览器能够自动访问新的URL，因此它是一个很有用的状态代码。注意这个状态代码有时候可以和301替换使用。例如，如果浏览器错误地请求 <a href="http://host/~user" target="_blank" rel="noopener">http://host/~user</a> （缺少了后面的斜杠），有的服务器返回301，有的则返回302。严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见 307。<br>· 303 - See Other 类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定向目标文档应该通过GET提取（HTTP 1.1新）。<br>· 304 - Not Modified 客户端有缓冲的文档并发出了一个条件性的请求（一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档）。服务器告诉客户，原来缓冲的文档还可以继续使用。<br>· 305 - Use Proxy 客户请求的文档应该通过Location头所指明的代理服务器提取（HTTP 1.1新）。<br>· 307 - Temporary Redirect 和302（Found）相同。许多浏览器会错误地响应302应答进行重定向，即使原来的请求是POST，即使它实际上只能在POST请求的应答是303时才能重定向。由于这个原因，HTTP 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的GET和POST请求；如果是307应答，则浏览器只能跟随对GET请求的重定向。（HTTP 1.1新）</p>
<p>4xx - 客户端错误<br>发生错误，客户端似乎有问题。例如，客户端请求不存在的页面，客户端未提供有效的身份验证信息。<br>· 400 - Bad Request 请求出现语法错误。<br>· 401 - Unauthorized 访问被拒绝，客户试图未经授权访问受密码保护的页面。应答中会包含一个WWW-Authenticate头，浏览器据此显示用户名字/密码对话框，然后在填写合适的Authorization头后再次发出请求。IIS 定义了许多不同的 401 错误，它们指明更为具体的错误原因。这些具体的错误代码在浏览器中显示，但不在 IIS 日志中显示：<br>· 401.1 - 登录失败。<br>· 401.2 - 服务器配置导致登录失败。<br>· 401.3 - 由于 ACL 对资源的限制而未获得授权。<br>· 401.4 - 筛选器授权失败。<br>· 401.5 - ISAPI/CGI 应用程序授权失败。<br>· 401.7 – 访问被 Web 服务器上的 URL 授权策略拒绝。这个错误代码为 IIS 6.0 所专用。<br>· 403 - Forbidden 资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致。禁止访问：IIS 定义了许多不同的 403 错误，它们指明更为具体的错误原因：<br>· 403.1 - 执行访问被禁止。<br>· 403.2 - 读访问被禁止。<br>· 403.3 - 写访问被禁止。<br>· 403.4 - 要求 SSL。<br>· 403.5 - 要求 SSL 128。<br>· 403.6 - IP 地址被拒绝。<br>· 403.7 - 要求客户端证书。<br>· 403.8 - 站点访问被拒绝。<br>· 403.9 - 用户数过多。<br>· 403.10 - 配置无效。<br>· 403.11 - 密码更改。<br>· 403.12 - 拒绝访问映射表。<br>· 403.13 - 客户端证书被吊销。<br>· 403.14 - 拒绝目录列表。<br>· 403.15 - 超出客户端访问许可。<br>· 403.16 - 客户端证书不受信任或无效。<br>· 403.17 - 客户端证书已过期或尚未生效。<br>· 403.18 - 在当前的应用程序池中不能执行所请求的 URL。这个错误代码为 IIS 6.0 所专用。<br>· 403.19 - 不能为这个应用程序池中的客户端执行 CGI。这个错误代码为 IIS 6.0 所专用。<br>· 403.20 - Passport 登录失败。这个错误代码为 IIS 6.0 所专用。<br>· 404 - Not Found 无法找到指定位置的资源。这也是一个常用的应答。<br>· 404.0 -（无） – 没有找到文件或目录。<br>· 404.1 - 无法在所请求的端口上访问 Web 站点。<br>· 404.2 - Web 服务扩展锁定策略阻止本请求。<br>· 404.3 - MIME 映射策略阻止本请求。<br>· 405 - Method Not Allowed 请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用，用来访问本页面的 HTTP 谓词不被允许（方法不被允许）（HTTP 1.1新）<br>· 406 - Not Acceptable 指定的资源已经找到，但它的MIME类型和客户在Accpet头中所指定的不兼容，客户端浏览器不接受所请求页面的 MIME 类型（HTTP 1.1新）。<br>· 407 - Proxy Authentication Required 要求进行代理身份验证，类似于401，表示客户必须先经过代理服务器的授权。（HTTP 1.1新）<br>· 408 - Request Timeout 在服务器许可的等待时间内，客户一直没有发出任何请求。客户可以在以后重复同一请求。（HTTP 1.1新）<br>· 409 - Conflict 通常和PUT请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。（HTTP 1.1新）<br>· 410 - Gone 所请求的文档已经不再可用，而且服务器不知道应该重定向到哪一个地址。它和404的不同在于，返回407表示文档永久地离开了指定的位置，而404表示由于未知的原因文档不可用。（HTTP 1.1新）<br>· 411 - Length Required 服务器不能处理请求，除非客户发送一个Content-Length头。（HTTP 1.1新）<br>· 412 - Precondition Failed 请求头中指定的一些前提条件失败（HTTP 1.1新）。<br>· 413 – Request Entity Too Large 目标文档的大小超过服务器当前愿意处理的大小。如果服务器认为自己能够稍后再处理该请求，则应该提供一个Retry-After头（HTTP 1.1新）。<br>· 414 - Request URI Too Long URI太长（HTTP 1.1新）。<br>· 415 – 不支持的媒体类型。<br>· 416 – Requested Range Not Satisfiable 服务器不能满足客户在请求中指定的Range头。（HTTP 1.1新）<br>· 417 – 执行失败。<br>· 423 – 锁定的错误。</p>
<p>5xx - 服务器错误<br>服务器由于遇到错误而不能完成该请求。<br>· 500 - Internal Server Error 服务器遇到了意料不到的情况，不能完成客户的请求。<br>· 500.12 - 应用程序正忙于在 Web 服务器上重新启动。<br>· 500.13 - Web 服务器太忙。<br>· 500.15 - 不允许直接请求 Global.asa。<br>· 500.16 – UNC 授权凭据不正确。这个错误代码为 IIS 6.0 所专用。<br>· 500.18 – URL 授权存储不能打开。这个错误代码为 IIS 6.0 所专用。<br>· 500.100 - 内部 ASP 错误。<br>· 501 - Not Implemented 服务器不支持实现请求所需要的功能，页眉值指定了未实现的配置。例如，客户发出了一个服务器不支持的PUT请求。<br>· 502 - Bad Gateway 服务器作为网关或者代理时，为了完成请求访问下一个服务器，但该服务器返回了非法的应答。 亦说Web 服务器用作网关或代理服务器时收到了无效响应。<br>· 502.1 - CGI 应用程序超时。<br>· 502.2 - CGI 应用程序出错。<br>· 503 - Service Unavailable 服务不可用，服务器由于维护或者负载过重未能应答。例如，Servlet可能在数据库连接池已满的情况下返回503。服务器返回503时可以提供一个 Retry-After头。这个错误代码为 IIS 6.0 所专用。<br>· 504 - Gateway Timeout 网关超时，由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答。（HTTP 1.1新） 。<br>· 505 - HTTP Version Not Supported 服务器不支持请求中所指明的HTTP版本。（HTTP 1.1新）。</p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>抓包工具Fiddler</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈postman</title>
    <url>/2020/05/09/%E6%B5%85%E8%B0%88postman/</url>
    <content><![CDATA[<p>一、postman基础功能介绍<br><img src="/2020/05/09/浅谈postman/1.jpg" alt><br>1、Authorization：身份验证，主要用来填写用户名密码，以及一些验签字段,postman有一个helpers可以帮助我们简化一些重复和复杂的任务。当前的一套helpers可以帮助你解决一些authentication protocols的问题。</p>
<p>2、Headers：请求的头部信息</p>
<p>3、Body：post请求时必须要带的参数，里面放一些key-value键值对</p>
<p>4、Pre-requerst Script:可以让你在 请求之前自定义请求数据，这个运行在请求之前，语法使用JavaScript语句。</p>
<p>5、tests：tests标签功能比较强大，通常用来写测试，它是运行在请求之后。支持JavaScript语法。postman每次执行request的时候，会执行tests。测试结果会在tests的tab上面显示一个通过的数量以及对错情况。这个后面会进行详解，它也可以用来设计用例，比如要测试返回结果是否含有某一字符串</p>
<p>二、postman-http常用的请求方法：GET， POST ，HEAD，OPTIONS， PUT， DELETE， TRACE 和 CONNECT 方法。　　<br>1、GET请求：请求指定的页面信息，并返回实体主体。（通常用来接收数据）。</p>
<p>2、POST请求：向指定资源提交数据进行处理请求，数据被包含在请求体中。POST请求可能会导致新的资源的建立、已有资源的修改。（通常用来发送数据）。</p>
<p>3、HEAD请求：类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头。</p>
<p>4、PUT请求：从客户端向服务器传送的数据取代指定的文档的内容。</p>
<p>5、DELETE请求：请求服务器删除指定的页面。</p>
<p>6、CONNECT请求：能够将连接改为管道方式的代理服务器。</p>
<p>7、OPTIONS请求：允许客户端查看服务器的性能。</p>
<p>8、TRACE请求：显示服务器收到的请求，主要用于测试或诊断。</p>
<p><img src="/2020/05/09/浅谈postman/2.png" alt><br>三、postman-post方式几种请求参数区别<br>1、form-data：就是http请求中的multipart/form-data,它将表单数据处理为一条消息，以标签为单元，用分隔符分开。既可以单独上传键值对，也可以直接上传文件（当上传字段是文件时，会有Content-Type来说明文件类型,content-disposition，用来说明字段的一些信息；由于有boundary隔离，所以multipart/form-data既可以上传文件，也可以上传键值对，它采用了键值对的方式，所以可以上传多个文件但该文件不会作为历史保存，只能在每次需要发送请求的时候，重新添加文件。）</p>
<p>2、x-www-form-urlencoded：对应信息头-application/x-www-from-urlencoded，会将表单内的数据转换为键值对，比如：name=java&amp;age = 23</p>
<p>3、raw：可以上传任意类型的文本，比如text、json、xml等,所有填写的text都会随着请求发送；</p>
<p>4、binary：对应信息头-Content-Type:application/octet-stream，只能上传二进制文件，且没有键值对，一次只能上传一个文件, 也不能保存历史，每次选择文件，提交；</p>
<p>PS:<br>multipart/form-data与x-www-form-urlencoded区别：</p>
<p>multipart/form-data：既可以上传文件等二进制数据，也可以上传表单键值对，只是最后会转化为一条信息；</p>
<p>x-www-form-urlencoded：只能上传键值对，并且键值对都是间隔分开的。<br><img src="/2020/05/09/浅谈postman/3.png" alt></p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>接口工具postman</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL语句</title>
    <url>/2019/12/30/SQL%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<p>基础篇<br>SQL select<br>select 列1,列2  from 表 —查询多列信息<br>select * from 表 —查询所有列信息</p>
<p>SQL distinct<br>select distinct 列 from 表—查询列中不重复数据</p>
<p>SQL where<br>select 列 from 表 where 列 运算符 值<br><img src="/2019/12/30/SQL语句/1.jpg" alt></p>
<p>SQL and &amp; or<br>select * from 表 where 列 = 值 and 列 = 值—and需要所有条条件都满足才能查询出数据<br>select * from 表 where 列 = 值 or 列 = 值—or只要有一个条件满足即能查询出数据</p>
<p>SQL order by<br>select * from 表 order by 列 asc—正序排列(字符串按字母排序）<br>select * from 表 order by 列 desc —倒叙排列（字符串按字母倒叙）<br>select * from 表 order by 列1 asc，列2 desc—先按列1正序排，排序后列1中有重复的项再按列2进行倒序</p>
<p>SQL insert<br>insert into 表 values (值1, 值2,….)—不指定插入数据的列，直接插入数据<br>insert into 表 (列1, 列2,…) values (值1, 值2,….)—指定所要插入数据的列：插入数据</p>
<p>SQL update<br>update 表 set 列 = 某值 where 任意列 = 值—修改表中某列的数据<br>update 表 set 列1 = 值1，列2 = 值2…where 任意列 = 值—修改表中多列的数据</p>
<p>SQL delete<br>delete from 表 where 列 = 值—删除整行数据<br>delete from 表 或 delete * from 表—不删除表的情况下删除所有的行</p>
<p>进阶篇<br>SQL top<br>select top num * from 表 —显示表中数量为num条数据<br>select 50 percent * from 表—显示表中 50% 的数据</p>
<p>SQL like<br>select * from 表 where 列 like ‘N%’—查询表中列以N开头的数据<br>select * from 表 where 列 like ‘%N’—查询表中列以N结尾的数据</p>
<p>SQL 通配符<br>select * from 表 where 列 like ‘%N%’—查询表中列含N的数据<br>select * from 表 where 列 like ‘_N’—查询表中列含取名字的第一个字符N的数据<br>select * from 表 where 列 like ‘[ABN]%’—表中选取列以 “A” 或 “L” 或 “N” 开头的数据<br>select * from 表 where 列 like ‘！[ABN]%’—表中选取列不以 “A” 或 “L” 或 “N” 开头的数据</p>
<p>SQL in<br>select * from 表 where 列 in (值1,值2,值3…)—查询表中列的多组数据</p>
<p>SQL between<br>select * from 表 where 列 between 值1 and 值2—查询表中列值1到值2之间的数据（首字母） Ps:不同数据库含义不同，有的包含值1不包含值2;有的包含值1和值2;有的不包含值1和值2;oracle数据库都包含</p>
<p>SQL aliases(as)<br>select * from 表 AS b where b.列 = 值—将表取别名b,并查询列为值的数据（oracle给表取别名不as，直接空格省略即可，因为怕与关键字重复）<br>select 列1 as 别1， 列2 as 别2，… from 表 —给列1，列2…取别名后，查询出名为别1，别2的列（oracle给列取别名可以省略as，直接空格加别名即可）</p>
<p>SQL join<br>join/inner join:表中有至少一个匹配，才会返回行<br><img src="/2019/12/30/SQL语句/3.jpg" alt><br>select Persons.LastName, Persons.FirstName, Orders.OrderNo<br>from Persons<br>inner join Orders<br>on Persons.Id_P=Orders.Id_P<br>order by Persons.LastName<br>结果：<br><img src="/2019/12/30/SQL语句/4.jpg" alt><br>left join: 即使右表中没有匹配，也从左表返回所有的行<br><img src="/2019/12/30/SQL语句/5.jpg" alt><br>select Persons.LastName, Persons.FirstName, Orders.OrderNo<br>from Persons<br>left join Orders<br>on Persons.Id_P=Orders.Id_P<br>order by Persons.LastName<br>结果：<br><img src="/2019/12/30/SQL语句/6.jpg" alt><br>right join: 即使左表中没有匹配，也从右表返回所有的行<br><img src="/2019/12/30/SQL语句/7.jpg" alt><br>select Persons.LastName, Persons.FirstName, Orders.OrderNo<br>from Persons<br>right join Orders<br>on Persons.Id_P=Orders.Id_P<br>order by Persons.LastName<br>结果：<br><img src="/2019/12/30/SQL语句/8.jpg" alt><br>full join: 只要其中一个表中存在匹配，就返回行<br><img src="/2019/12/30/SQL语句/9.jpg" alt><br>select Persons.LastName, Persons.FirstName, Orders.OrderNo<br>from Persons<br>full join Orders<br>on Persons.Id_P=Orders.Id_P<br>order by Persons.LastName<br>结果：<br><img src="/2019/12/30/SQL语句/10.jpg" alt></p>
<p>SQL union<br>select 列 from 表1<br>union<br>select 列 from 表2<br>—合并两个或多个select句中选取不同的结果集(两张表必须拥有相同数量的列,列也必须拥有相似的数据类型，顺序也必须相同）<br>select 列 from 表1<br>union all<br>select 列 from 表2<br>—合并两个或多个select句中选取有所值，允许重复(两张表必须拥有相同数量的列,列也必须拥有相似的数据类型，顺序也必须相同）</p>
<p>SQL select into<br>select * into 新表 [IN externaldatabase] from 旧表—从一个表中选取数据，然后把数据插入另一个表中。<br>select * into 备份 from 表—创建表的备份复件或者用于对记录进行存档。</p>
<p>SQL create database<br>create database 数1—创建一个名为数1的数据库</p>
<p>SQL create table<br>create table 表名称<br>(<br>列名称1 数据类型,<br>列名称2 数据类型,<br>列名称3 数据类型,<br>….<br>)<br><img src="/2019/12/30/SQL语句/11.jpg" alt></p>
<p>SQL not null<br>create table Persons<br>(<br>Id_P int not null,<br>LastName varchar(255) not null,<br>FirstName varchar(255),<br>Address varchar(255),<br>City varchar(255)<br>)<br>—not null 约束强制列不接受null值，如果不向字段添加值，就无法插入新记录或者更新记录。</p>
<p>SQL unique<br>在表创建时，在列创建unique约束(每个表可以有多个unique约束，但是每个表只能有一个primary key约束。)<br><img src="/2019/12/30/SQL语句/12.jpg" alt><br>命名unique约束，并为多个列定义unique约束<br><img src="/2019/12/30/SQL语句/13.jpg" alt><br>在表已被创建时，在列创建unique约束<br>alter table 表 add unique (列)<br>命名unique约束，并为多个列定义unique约束<br>alter table 表 add constraint uc_PersonID unique (Id_P,LastName)<br>撤销unique约束<br>alter table 表 drop constraint uc_PersonID</p>
<p>SQL create index<br>create index index_name on 表(列)—在表上创建一个简单的索引(允许重复)<br>create unique index index_name on 表(列)—在表上创建一个唯一的索引(不允许重复)</p>
<p>SQL drop<br>drop index index_name—删除表格中的索引<br>drop table 表名—删除表(结构、属性以及索引均被删除)<br>drop database 数据库名—删除数据库<br>truncate table 表名—仅删除表格中的数据</p>
<p>SQL alter<br>alter table 表 add 列 datatype—表中添加列<br>alter table 表 drop column 列—删除表中的列</p>
<p>SQL null<br>select * FROM 表 where 列 is null—表中列为空的数据<br>select * FROM 表 where 列 is not null—表中列不为空的数据</p>
<p>高级篇<br>SQL avg()<br>select avg(列) from 表—返回表中列的平均值(null值不包括在计算中)</p>
<p>SQL count()<br>select count(列) from 表—返回指定列的值的数目(null不计入)<br>select count(*) from 表—返回表中的记录数<br>select count(distinct 列) from 表—返回指定列的不同值的数目</p>
<p>SQL first()<br>select first(列) from 表—返回指定的字段中第一个记录的值</p>
<p>SQL last()<br>select last(列) from 表—返回指定的字段中最后一个记录的值</p>
<p>SQL max()<br>select max(列) from 表—返回一列中的最大值(null不计入)</p>
<p>SQL min()<br>select min(列) from 表—返回一列中的最小值(null不计入)</p>
<p>SQL sum()<br>select sum(列) from 表—返回数值列的总数</p>
<p>SQL ucase()<br>select ucase(列) from 表—把列中的字段转换为大写</p>
<p>SQL lcase()<br>select lcase(列) from 表—把列中的字段转换为小写</p>
<p>SQL mid()<br>select mid(列,start[,length]) from 表—从文本字段中提取字符<br><img src="/2019/12/30/SQL语句/14.jpg" alt></p>
<p>SQL len()<br>select len(列) from 表—返回文本字段中值的长度</p>
<p>SQL round()<br>select round(列,decimals) from 表—把数值字段舍入为指定的小数位数。<br><img src="/2019/12/30/SQL语句/15.jpg" alt></p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>SQL语句总结</tag>
      </tags>
  </entry>
  <entry>
    <title>舌尖上的南浔</title>
    <url>/2019/12/05/%E8%88%8C%E5%B0%96%E4%B8%8A%E7%9A%84%E5%8D%97%E6%B5%94/</url>
    <content><![CDATA[<p>南浔古镇位于湖州市南浔区，地处江浙沪两省一市交界处。明清时期为江南蚕丝名镇，其中有“四象八牛七十二金狗”为代表的南浔富商<br>所谓“四象、八牛、七十二狗”者，皆资本雄厚，或自为丝通事，或有近亲为丝通事者。<br>财产达千万两白银以上者称之曰“象”。五百万两以上不过千万者，称之曰“牛”，其在一百万两白银以上不达五百万者则譬之曰“狗”。<br>南浔号称“十大小吃”，下面博主选其中比较特色的来介绍<br>1、双交面<br>南浔泰安桥堍，近年来颇负盛名的交头面，有卤汁、牛肉、素丝、雪菜等十余种，尤以双交面（又叫酥肉爆鱼面）为上品。<br>南浔双交面的制作特点：<br>一是生面质优，由于经过多道加工，所制面条比一般面条细、韧、爽、滑;<br>二是面交头选料讲究，制作精细。<br>酥肉的制作是：拣五花肉置火上焖烧六七个小时，然后切块即成，故色泽红润，肥而不腻，又香又酥。<br>爆鱼的制作是：专挑四至五斤左右活草鱼剖杀、洗净、切片，然后用酱油、盐、酒拌浸四五小时，捞起晾干，再下沸油锅熟，加味精、糖等佐料煮烧而成，故色泽乌亮，鲜而不腥。<br>整碗面汤底清淡，但猪油味偏重，推荐：百年老店状元楼，味道正宗，店家很傲娇，平时早上开店，下午两点钟就关门，非常佛性的一个店主。<br><img src="/2019/12/05/舌尖上的南浔/%E5%8F%8C%E4%BA%A4%E9%9D%A2.jpg" alt><br><img src="/2019/12/05/舌尖上的南浔/%E7%8A%B6%E5%85%83%E6%A5%BC.jpg" alt><br>2、千张粉丝煲<br>粉丝千张包是真正的南浔古镇风味美食<br>千张包千张薄而韧，可包得紧密不透气。馅心跟一般吃到的那种剁碎的肉糜不同，他是采用纯精猪腿肉、朝鲜开洋、日本干贝，直接整颗放入。那一口下去，香浓汁鲜，虽然肉有点柴，但是鲜香无比。<br>粉丝采用绿豆制作，独取粉丝头下汤，短而粗，久煮不糊，柔软入味。<br>千张粉丝煲里面有千张包、粉丝、青菜、豆腐果，千张包肉嫩不腻，粉丝滑嫩爽口，汤汁鲜美。<br><img src="/2019/12/05/舌尖上的南浔/%E5%8D%83%E5%BC%A0%E7%B2%89%E4%B8%9D%E5%8C%85.jpeg" alt><br>3、绣花锦<br>看起来像青菜，只是菜茎稍细，菜叶的边缘有细细的锯齿形。炒熟后，碧绿依旧，菜汁清香，吃起来糯软清甜，当地人说回味会有些微苦，我却没尝出来。<br>之所以唤作“绣花锦”，是因为此菜长满一地时，软软的菜叶上面的花纹像是一幅幅绣出来的画，十分好看。<br>据说绣花锦只长在 南浔 方圆十里之内，十里之外就变种，有形而无香，颇为有趣。<br><img src="/2019/12/05/舌尖上的南浔/%E7%BB%A3%E8%8A%B1%E9%94%A6.jpg" alt><br>4、定胜糕<br>定胜糕据当地人讲是湖州地区的传统名点，但是苏州、杭州也说是当地特色，但总体来说算是江南名小吃吧<br>定胜糕采用的是米粉为原料，外观粉红色，里面是豆沙馅儿，将米粉放入模型里面，摁实，上笼蒸20多分钟即可<br>口感松软，味道清香，尤其是甜糯的感觉，一种初恋的感觉<br>许多老年人对定胜糕百吃不厌，就是因为即使牙口不好，也不影响品尝儿时的味道。<br><img src="/2019/12/05/舌尖上的南浔/%E5%AE%9A%E8%83%9C%E7%B3%95.jpeg" alt><br>5、南浔三道茶–风枵茶(甜茶)<br>风枵–南浔人称镬糍，即糯米锅巴。<br>茶碗里放点风枵冲上开水，放上白糖，再撒一些上年腌制的桂花，味道清甜，风枵茶的特点是“甜”、“香”、“糯”、“滑”。<br>到了南浔，如果主人泡上风枵茶，是一定要喝的，因为请喝风枵茶是表示对客人的尊重、敬意、或者重视，<br><img src="/2019/12/05/舌尖上的南浔/%E9%A3%8E%E6%9E%B5%E8%8C%B6.jpg" alt><br>6、南浔三道茶之–熏豆茶(咸茶)<br>据《南浔镇志》记载：每年农历12月12日和清明蚕花节，农家就用熏豆茶、蚕花园子和南浔家酒祭祀，当地百姓对熏豆茶有着特别嗜好，从古至今习俗不改。<br>熏豆茶又称“烘豆茶”，是南浔三道茶中最考究的一道，共有七种佐料：熏豆、胡萝卜丝、桔皮丝、蓖麻子、白芝麻、少量嫩芽茶、腌蚕豆，另有讲究的人家还加入黑豆腐干、扁尖、笋尖或青橄榄等等。<br>此茶具有通气开胃健脾的功能，又有浓郁的乡土气息，吃起来香喷喷咸津津，别具一格。<br><img src="/2019/12/05/舌尖上的南浔/%E7%86%8F%E8%B1%86%E8%8C%B6.jpg" alt><br>7、南浔三道茶–清茶(绿茶)<br>第三道是清茶，一般用西湖龙井、顾渚紫笋、莫干黄芽、安吉白片等江南地区名品绿茶，也有农家手工炒制的自制茶<br>清茶其实就是绿茶，沏泡后清香持久、醇和生津、提神健脑，绿茶对人体的益处是有目共睹的，男性一般比女性更偏爱一些，<br>而顾渚紫笋茶是上品贡茶中的“老前辈”，早在唐代便被茶圣陆羽论为“茶中第一”。<br>有诗描述当时紫笋茶进贡的场景“凤辇寻春半醉回、仙娥进水御帘开。牡丹花笑金钿动，传奏吴兴紫笋来”。<br><img src="/2019/12/05/舌尖上的南浔/%E7%B4%AB%E7%AC%8B%E8%8C%B6.jpg" alt><br>如果想品“三道茶”建议去春兰茶室。茶室主人是一对老两口，茶室老大爷姓朱，为人十分健谈，每上一道茶都细心解释做法风俗等。<br>与景区内十几元一杯的熏豆茶相比，六元一杯，但滋味丝毫不见，足见茶室主人的心态。<br>如果途径此处不妨进去坐坐，点几碗茶，看着窗外的流水，听茶室主人说说三道茶的故事<br><img src="/2019/12/05/舌尖上的南浔/%E6%98%A5%E5%85%B0%E8%8C%B6%E5%AE%A4.jpg" alt><br>8、桃花酒<br>“几缕相思泪两行，一壶桃花愁断肠”<br>在阳春三月采新鲜的桃花花瓣，洗净后晾干后放在坛子中，然后加入准备好的白酒，再放入适量冰糖调匀后密封酿制，九十天以后就能做好。<br>桃花酒酿不止是酒，更是江南古镇里特有的芳华……<br><img src="/2019/12/05/舌尖上的南浔/%E6%A1%83%E8%8A%B1%E9%86%89.jpg" alt><br>品完南浔美食，听着音乐，漫步在百间楼，远离城市的喧嚣，让心灵暂时回归自然<br><img src="/2019/12/05/舌尖上的南浔/%E7%99%BE%E9%97%B4%E6%A5%BC.jpg" alt></p>
]]></content>
      <categories>
        <category>美食分享</category>
      </categories>
      <tags>
        <tag>舌尖上的南浔</tag>
      </tags>
  </entry>
  <entry>
    <title>庐山游记</title>
    <url>/2019/11/18/%E5%BA%90%E5%B1%B1%E6%B8%B8%E8%AE%B0/</url>
    <content><![CDATA[<p>博主对庐山神往已久，终于忙里偷闲的去了一次。去过之后博主自认为庐山算是三山五岳中最值得去的地方之一。<br>庐山位于九江市，如果去庐山的小伙伴建议购买“九江站”而非“庐山站”，因为九江去庐山的车比较多而且交通方便，机场、高铁都有，也可到南昌转站到九江。<br>票价说明：<br>南昌——-九江火车票价：21.5元<br>火车站——汽车总站票价：1元<br>到庐山汽车票价：16.5元;(6-17点)<br>庐山景区票价：160元(Ps：网订157元)<br>景区观光车票：70元(7天内随意坐)<br>下面晕车的小伙伴请听好了，一定一定一定要带好晕车药等，因为上山的公路一共有396个弯(Ps：别问博主咋知道的，因为毛爹爹数的，好奇的小伙伴可以自己数下)，行驶40分钟以上便到了牯岭镇。<img src="/2019/11/18/庐山游记/%E7%89%AF%E5%B2%AD%E9%95%87.jpg" alt><br>镇上的客栈很多，可以根据各自喜好选择，镇上的物价不是很高，吃饭一餐人均40左右，饭后可以小镇随意逛逛，牯岭镇的夜景还是很美的。<br><img src="/2019/11/18/庐山游记/%E5%BA%90%E5%B1%B1%E5%9C%B0%E5%9B%BE.jpg" alt><br>第一天路线(东线)：<br>牯岭镇–含鄱口–植物园–五老峰–三叠泉–小天池<br>第一个景点：含鄱口。<br>早上八点从牯岭镇出发直接做观光车去含鄱口站，到含鄱口站向上步行大概5分钟左右便到了，可以在此拍拍照欣赏一下含鄱口。<img src="/2019/11/18/庐山游记/%E5%90%AB%E9%84%B1%E5%8F%A3.jpg" alt><br>第二个景点：植物园。<br>欣赏完沿着含鄱口牌楼向上走大概10分钟左右就到了植物园，红枫一般11月开，其他季节去没看点，博主去的时候只有两株红了，有点遗憾。<br>第三个景点：五老峰。<br>欣赏完红枫出来可以坐着观光车前往五老峰，五老峰前四峰总体来说比较容易，欣赏风景加拍照大概一个小时左右就可以到达四峰，在四峰你会看到一块大石头，上面写着“天地壮觀”四个大字。<img src="/2019/11/18/庐山游记/%E5%A4%A9%E5%9C%B0%E5%A3%AE%E8%A7%82.jpg" alt><br>此时你有两种选择：<br>1、原路返回，然后坐观光车去下一站三叠泉，此路线较为轻松;<br>2、继续前往五峰，然后徒步去三叠泉;从四峰到五峰大概要20分钟，你又会看到一块大石头，上面写着“目無障礙”四个大字，这就是五峰;<img src="/2019/11/18/庐山游记/%E7%9B%AE%E6%97%A0%E9%9A%9C%E7%A2%8D.jpg" alt><br>第四个景点：三叠泉。<br>从五峰到三叠泉大概30分钟左右，此时你会看到一个索道站，这是第一个坑，因为索道只会送你到1/3的部分而且是最容易走的一段路，博主不建议坐。<br>忽略索道站直接向里面走，你会看到一个商店，水三块钱一瓶，价格相对公道，水不足的可以补充，从三叠泉入口到索道终点大概40分钟左右。<br>这时你会到购买返山卡的地方，返山卡二元只收现金可退，所以记得带零钱，这段路到三叠泉谷底是最难走的一段路，大概需要30分钟，然后你就到了此行终点。(Ps：三叠泉可以不用返回直接出景区)<img src="/2019/11/18/庐山游记/%E4%B8%89%E5%8F%A0%E6%B3%89.jpg" alt><br>第五个景点：小天池。<br>如果你从三叠泉返回会十分消耗体力，到观光车站大概是下午5点左右，可以去小天池看“诺那塔寺”然后可以看日落，有人推荐看日出、日落的地点为“含鄱口”，博主认为小天池视野开阔且人少更适合看日落。<img src="/2019/11/18/庐山游记/%E5%B0%8F%E5%A4%A9%E6%B1%A0.jpg" alt><br>日落的时间应该在17：30左右，看完运气好可以赶上最后一班回镇上的观光车也可徒步返回。<br>第二天路线(西线)<br>如琴湖–花径–锦绣谷–仙人洞–大天池–龙首崖–悬索桥–三宝树–博物馆–会议旧址–美庐别墅–庐山电影院<br><img src="/2019/11/18/庐山游记/%E8%A5%BF%E7%BA%BF.jpg" alt><br>第一个景点：如琴湖。<br>如琴湖是庐山第二大人工湖，可以从正街站直接坐车到花径站;也可以徒步去如琴湖，只需要10分钟左右，如果徒步有两个岔口，都可以到下一站花径。建议走左上那条路，因为可以上到岛上去，岛上那个亭子就是大林寺遗址。<img src="/2019/11/18/庐山游记/%E5%A6%82%E7%90%B4%E6%B9%96.jpg" alt><br>第二个景点：花径公园。<br>如琴湖继续往前走–花径公园，里面有花径亭，中间刻“花径”二字相传为白居易所写，继续往前两分钟就是“白居易草堂”，花径公园有四个门，从正大门出来，花径公园因《白居易·大林寺桃花》“人间四月芳菲尽，山寺桃花始盛开。长恨春归无觅处，不知转入此中来”而闻名于世。<img src="/2019/11/18/庐山游记/%E8%8A%B1%E5%BE%84%E5%85%AC%E5%9B%AD.jpg" alt><br>第三个景点：锦绣谷。<br>从大门出来正对面就是- -“锦绣谷”，锦绣谷全长1.5公里，不走回头路，王安石有“还家一笑即芳晨，好与名山作主人。邂逅五湖乘兴往，相邀锦绣谷中春”赞美锦绣谷。<br>第一个小景点“天桥”<br>锦绣谷中的天桥看点为石头上的马蹄印和对面四个字(Ps：第二个字错别字，应为“断岸千尺”，出自江南四大才子祝枝山的手笔)<img src="/2019/11/18/庐山游记/%E5%A4%A9%E6%A1%A5.jpg" alt><br>第二个小景点为“好运石”<br>继续前行- -好运石，摸好运石有讲究男左手女右手，一摸官运、二摸财运、三摸桃花运，福不可尽享，人不可贪心，想求什么就摸几下。隐藏小景点在天桥和好运石中间为86版西游记的取景地;另外下了好运石的楼梯不要着急走，往下面看有个山峰上面有一块石头，上面写了四个字”黄云万里”有典故的，可以留意一下。(Ps：《李白·庐山谣》“黄云万里动风色，白波九道流雪山”)<img src="/2019/11/18/庐山游记/%E5%A5%BD%E8%BF%90%E7%9F%B3.jpg" alt><br>第三个小景点“险峰”<br>继续前行- -险峰，毛主席曾写过“无限风光在险峰”正是描述此地，海拔1025m。在此可以拍照，当年毛爹爹在此留影。接着下险峰，此处有隐藏景点，下面有两个观景台，第一个观景台回头看险峰像一个猪头，在第二个观景台继续回头看，险峰像个人头。<br>第四个小景点“谈判台”<br>继续前行- -谈判台，为美国上将马歇尔与蒋介石秘密谈判的地方，下面就是“梵音泉”，因为流水声像和尚敲木鱼而得名。再抬头看，船型的石头上书四个大字“同舟共济”，意为国共合作共同抗战。<img src="/2019/11/18/庐山游记/%E5%90%8C%E8%88%9F%E5%85%B1%E6%B5%8E.jpg" alt><br>第五个小景点“观庙亭”<br>继续前行- -观庙亭，并非博主写错，此亭原为民国第一夫人宋美龄和蒋介石看晚霞的地方，老蒋曾说过几个妙字，下属拍其马屁而改为“观妙亭”。此处两个隐藏景点：第一个隐藏景点，有两座非常非常出名的寺庙，要下到亭子下面看，像塔一样，前面一座为东林寺，后面一座更出名为西林寺，苏轼曾在此写过《题西林壁》“横看成岭侧成峰，远近高低各不同。不识庐山真面目，只缘身在此山中”。第二个隐藏景点是”竹林寺”，亭子对面石头上有三个字”竹林寺”，传说只有与佛有缘的人才能看到此寺庙，可以细看这三个字，很有禅意。<img src="/2019/11/18/庐山游记/%E7%AB%B9%E6%9E%97%E5%AF%BA.jpg" alt><br>第六个小景点“仙人洞”<br>继续前行- -仙人洞，庐山志中无仙人洞，只有佛手喦，因毛泽东的“天生一个仙人洞”而闻名全国。看点有两个“一滴泉”和“平安钟”，一滴泉很有意思分阴泉和阳泉，无论天旱还是暴雨它都一滴一滴的滴水。平安钟为明洪武年间的物件，很多人会去摸它旁边那两块石头，实际那个口钟才是仙人洞最古老的东西。<img src="/2019/11/18/庐山游记/%E4%BD%9B%E6%89%8B%E5%B2%A9.jpg" alt><br>第七个小景点“太上老君殿”<br>仙人洞旁边- -老君殿，再往前走有四个大字“常乐我净”出自《涅槃经》的涅槃四德，下面有个人骑着一头牛，此有典故：老子骑青牛出关–紫气东来。<br>第八个小景点“劲松”<br>前走一段即为“暮色苍茫看劲松”的劲松，松龄160年。下面有块石头上面写着八个大字“縱攬雲飛”“豁然贯通”，又名“蟾蜍石”，上面就是仙人洞的正门又名“花好月圆门”<img src="/2019/11/18/庐山游记/%E4%BB%99%E4%BA%BA%E6%B4%9E.jpg" alt><br>第九个小景点“御碑亭”<br>仙人洞正门右手边- -御碑亭，为刘伯温所建，上方雕鱼，本意希望可以四季风调雨顺。<br>第四个景点：大天池。<br>从仙人洞到大天池有两种方式：<br>第一种观光车直接到。<br>第二种越过停车场，有一条小路叫“阳明路”，路很好走，大概十分钟就可以到了。<br>出了阳明路对面就是“圆佛殿”，继续前行“天池塔”，继续前行“天池寺”，再往前走“大天池”<br>第五个景点：龙首崖。<br>沿大天池向下走就到了龙首崖.此处也有一棵“庐山松”.<img src="/2019/11/18/庐山游记/%E9%BE%99%E9%A6%96%E5%B4%96.jpg" alt><br>第六个景点：悬索桥。<br>看完龙首崖向下走1.6公里到“悬索桥”。<br>此时你有四种方式可以到下一站：<br>1、原路返回到大天池坐车，此方式博主非常非常非常非常不推荐，因为这条路非常难走。<br>2、徒步到了索道站向上是买缆车票的地方，左边有个白色路牌写着“神龙公路”，走路大概50分钟。<br>3、看到神龙公路路牌向下走5分钟左右，有一条河，沿着河走，抬头看，跟着缆车走，大概40分钟，路不好走。<br>4、坐缆车，票价30元，大概10分钟。博主极度推荐，此缆车性价比较高。<br><img src="/2019/11/18/庐山游记/%E6%82%AC%E7%B4%A2%E6%A1%A5.jpg" alt><br>缆车站向右走为石门涧景区，极度坑45元门票而且要走很远路，极度不推荐。<br>第七个景点：三宝树。<br>索道下车后对面是电站大坝车站，对面有个“大坝商店”旁边即为三宝树入口，依次“乌龙谭”此为西游记水帘洞的取景地、“黄龙潭”、“三宝树”，有两棵柳杉一棵银杏，最高树龄1600年。正对面就是大雄宝殿。<br>第八个景点：博物馆。<br>继续上行到芦林停车场去博物馆，如果想了解一个地方博物馆一定要去的，出了博物馆对面就是毛泽东诗词园，旁边的就是芦林湖。<br>第九个景点：会议旧址。<br>直接坐观光车到会议旧址，此处最经典的是彭老总的“万言书”原件。出了会议旧址有一个暗藏景点庐山大厦，据说是明四暗六的建筑。<br>第十个景点：美庐别墅。<br>可以观光车到也可从会议旧址走到美庐，蒋介石败走后毛泽东来到美庐第一句就是“久违了，委员长”。其中有“美廬中正题”的石头，此石头曾被破坏掉了后又临摹上去的，另外“美”字拆开倒着看。有老蒋的佩剑“中正佩剑”、“张学良的笔迹”、“蒋字金边七彩碗具”、“朱元璋的画像”等<img src="/2019/11/18/庐山游记/%E7%BE%8E%E5%BA%90.jpg" alt><br>最后从美庐向上走，正对面“周恩来纪念馆”，向上走“基督教堂”，正对面“庐山恋电影院”，这是一家许多年只放一部《庐山恋》电影的影院。再往上走5分钟会有几家银行连在一起，有条街叫“合面街”可以吃小吃，就此所有行程全部结束。<img src="/2019/11/18/庐山游记/%E5%BA%90%E5%B1%B1.jpg" alt></p>
]]></content>
      <categories>
        <category>旅行游记</category>
      </categories>
      <tags>
        <tag>庐山攻略</tag>
      </tags>
  </entry>
  <entry>
    <title>买电脑需要需要看什么？</title>
    <url>/2019/11/15/%E4%B9%B0%E7%94%B5%E8%84%91%E9%9C%80%E8%A6%81%E9%9C%80%E8%A6%81%E7%9C%8B%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    <content><![CDATA[<p>最近一个朋友想买笔记本，于是咨询了我一下，我一个软件攻城狮，对硬件方面知之甚少，于是在网上恶补了一下，并理出一些建议，希望可以对想买笔记本的朋友有所帮助。</p>
<p>决定电脑性能的有四大部件：<br>(1)CPU<br>(2)显卡<br>(3)内存<br>(4)硬盘</p>
<p>(一)CPU：主流品牌有inter和AMD<br>主要：架构、工艺、核心数(线程数)、主频、三级缓存</p>
<p>架构：cpu厂商给属于同一系列的CPU产品定的一个规范，每一代产品的架构都不同，越新越好，比如酷睿比奔腾好，奔腾比赛扬要好</p>
<p>工艺：这个没什么好说的，高精产品，越小需要的工艺越严也就越好。</p>
<p>核心数(线程数)：cpu核心数决定了它的计算能力，理论上越多越好，但是实际中需要考虑是否支持超线程技术，主频等，比如：AMD12核CPU不如inter四核。一般选择inter酷睿4核8线程足矣</p>
<p>主频：理论上CPU主频越高，CPU的速度越快，性能越强。但高代表会发热，一般选3.0GHz左右即可</p>
<p>三级缓存：cup与内存之间的临时储存器，主要看二三级缓存即可，通常也是越大越好。 </p>
<p>CPU天梯图：(<a href="http://www.mydrivers.com/zhuanti/tianti/cpu/" target="_blank" rel="noopener">http://www.mydrivers.com/zhuanti/tianti/cpu/</a>) —cup可以参照这个天梯，从低到高，越高性能越好。</p>
<p>(二)显卡：主流品牌有AMD和英伟达<br>主要：架构、流处理器数量、核芯频率、显存、位宽、</p>
<p>架构：就是显示芯片各种处理单元的组成和工作模式，在参数相同的情况下，架构越先进，效率就越高，性能也就越强。</p>
<p>流处理器：即着色单元，同架构显卡中，流处理器数量越多，性能也越强大。</p>
<p>核芯频率：一般越大越好</p>
<p>显存及其位宽：一般来说是越大越好，这两个参数决定了显卡在高分辨率和高抗锯齿下的表现</p>
<p>光栅处理单元：光栅数越大游戏里的抗锯齿和光影效果越好,对ROPs的性能要求也就越高</p>
<p>显卡天梯图：(<a href="https://www.crsky.com/zixun/15662.html" target="_blank" rel="noopener">https://www.crsky.com/zixun/15662.html</a>) —显卡可以参照这个天体，从低到高，越高性能越好。</p>
<p>(三)内存：主流品牌有芝奇、威刚、英睿达(镁光)、金士顿、美商海盗船、十铨、宇瞻<br>主要：代数、容量、频率、时序和超频、通道</p>
<p>内存的代数：就是指内存名称中的“DDR2”、“DDR3”、“DDR4”，数字代表代数，越大越新，现在主流四代。</p>
<p>内存的容量：并非越大越好，需要与CPU和主板搭配决定，通常8-16G足够用。</p>
<p>内存的频率：在容量相同的情况下，内存频率越高，性能就越好，一般3000Mhz即可。</p>
<p>内存的时序和超频：时序是指内存的延迟时间，通常同频率的内存，时序越低性能越好。超频就是提高频率的，一般这项非高精选手不需要注意。</p>
<p>内存双通：一般双通的内存可以提高内存带宽，从而提升内存速度。</p>
<p>(四)硬盘：分机械和固态硬盘;<br>机械硬盘主流品牌：希捷和西部数据。<br>机械硬盘主要：容量、转速、缓存大小、单碟容量、接口类型</p>
<p>机械硬盘容量：这个没什么好说的，通常1T足够使用</p>
<p>机械硬盘转速：值越大，内部传输率就越快，访问时间就越短，整体性能也就越好。一般7200RPM较合适</p>
<p>机械硬盘缓存：缓存越大，数据传输速度越快。通常1T的64MB即可满足</p>
<p>机械硬盘单碟容量：容量越大，数据传输速度越快。</p>
<p>机械硬盘接口类型：接口决定了与电脑连接的速度，越大越好。最好选择SATA3(PS:1.0理论传输速度为1.5Gbit/s;2.0理论传输速度为3Gbit/s;3.0理论传输速度为6Gbit/s)</p>
<p>固态硬盘主流品牌有：英特尔、金士顿、三星、浦科特、镁光、闪迪、威刚等<br>主要：颗粒、主控、容量、缓存、接口类型、4K读写</p>
<p>固态硬盘颗粒：有SLC、MLC、TLC三种，SLC最好价格较高，不过目前主流为TLC，土豪随意。</p>
<p>固态硬盘主控：固态硬盘的大脑，承担着指挥、运算以及协调的作用。这个参数各大厂商差异不大，推荐Marvell即可</p>
<p>固态硬盘容量：这个参数没什么可说的，一般240GB即可，土豪随意。</p>
<p>固态硬盘缓存：这个同机械硬盘，越大越好。</p>
<p>固态硬盘接口类型：接口介绍比较复杂，建议选择M.2接口的硬盘(先注意一下主板是否有M.2插槽)</p>
<p>固态硬盘4KB读写：这个越大越好</p>
<p>建议内存的搭配为1T机械硬盘+240G固态硬盘，当然土豪随意</p>
<p>以上就是关于买电脑的一点个人建议，希望可以对想要换电脑的朋友有所帮助，少掉坑。</p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>电脑配置</tag>
      </tags>
  </entry>
  <entry>
    <title>TCP-IP五层模型</title>
    <url>/2019/11/15/TCP-IP%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<p>OSI七层划分为：应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。</p>
<p>TCP/IP五层划分为：应用层、传输层、网络层、数据链路层、物理层。</p>
<p>TCP/IP四层划分为：应用层、传输层、网络层、网络接口层。<br><img src="/2019/11/15/TCP-IP五层模型/1.png" alt><br>用户所感知到的只有应用层,自上而下每层都依赖于下一层,越往上越靠近用户,越往下越靠近硬件，个人认为目前五层划分比较主流。<br>(一)物理层<br>物理层设备：中继器、集线器、光缆、电缆、双绞线、无线电波等<br>物理层功能：主要是基于电器特性发送高低电压，高电压对应数字1，低电压对应数字0，中间传的是电信号，即010101…这些二进制位</p>
<p>(二)数据链路层<br>数据链路层设备：网桥、以太网交换机、网卡<br>数据链路层功能：主要用来定义电信号的分组方式及意义，单纯的电信号0和1没有任何意义的</p>
<p>以太网协议：<br>早期的时候各个公司都有自己的分组方式，后来形成了统一的标准，即以太网协议ethernet</p>
<p>ethernet规定：<br>一组电信号构成一个数据包，叫做“帧”<br>每一数据帧分成：报头head和数据data两部分<br>head包含：(固定18个字节)<br>发送者／源地址：6个字节<br>接收者／目标地址：6个字节<br>数据类型：6个字节<br>data包含：(最短46字节，最长1500字节)</p>
<p>数据包的具体内容：<br>head长度＋data长度＝最短64字节，最长1518字节，超过最大限制就分片发送</p>
<p>mac地址：<br>head中包含的源和目标地址由来：ethernet规定接入internet的设备都必须具备网卡，发送端和接收端的地址便是指网卡的地址，即mac地址<br>mac地址：每块网卡出厂时都被烧制上一个世界唯一的mac地址，长度为48位2进制，通常由12位16进制数表示（前六位是厂商编号，后六位是流水线号）</p>
<p>广播：<br>有了mac地址，同一网络内的两台主机就可以通信了（一台主机通过协议获取另外一台主机的mac地址）<br>ethernet采用最原始的方式，广播的方式进行通信，即计算机通信基本靠吼<br><img src="/2019/11/15/TCP-IP五层模型/2.png" alt><br>(三)网络层<br>网络层设备：路由器、三层交换机<br>网络层功能：引用一套新的地址用来区分不同的广播域／子网，这套地址即网络地址，用来跨局域网通讯</p>
<p>IP协议：<br>规定网络地址的协议叫ip协议，它定义的地址称之为ip地址，常见为：ipv4，由32位2进制表示，通常写成四段十进制数。例：172.16.10.1，范围0.0.0.0-255.255.255.255<br>另外：ipv6，由128位2进制表示。</p>
<p>ip地址分成两部分：<br>网络部分：标识子网<br>主机部分：标识主机<br>注意：单纯的ip地址段只是标识了ip地址的种类，从网络部分或主机部分都无法辨识一个ip所处的子网</p>
<p>子网掩码：<br>所谓”子网掩码”，就是表示子网络特征的一个参数，说明该IP地址是在局域网上，还是在远程网上。另外可将一个大的IP网络划分为若干小的子网络。<br>它在形式上等同于IP地址，也是一个32位二进制数字，它的网络部分全部为1，主机部分全部为0。将IP与子网掩码做AND运算即可得本网段的网络号</p>
<p>ip数据包：<br>ip数据包也分为head和data部分，无须为ip包定义单独的栏位，直接放入以太网包的data部分<br>head：长度为20到60字节<br>data：最长为65,515字节。<br>而以太网数据包的“数据”部分，最长只有1500字节。因此，如果IP数据包超过了1500字节，需要分包发送。</p>
<p>ARP协议：<br>arp协议由来：计算机通信基本靠吼，即广播的方式，所有上层的包到最后都要封装上以太网头，然后通过以太网协议发送，通信是基于mac的广播方式实现，计算机在发包时，获取自身的mac是容易的，如何获取目标主机的mac，就需要通过arp协议。<br>arp协议功能：广播的方式发送数据包，获取目标主机的mac地址</p>
<p>(四)传输层<br>网络层设备：四层的路由器、四层交换机<br>传输层功能：建立端口到端口的通信(端口范围0-65535，0-1023为系统占用端口)<br>tcp协议：<br>可靠传输，TCP数据包没有长度限制，理论上可以无限长，但是为了保证网络的效率，通常TCP数据包的长度不会超过IP数据包的长度，以确保单个TCP数据包不必再分割。<br>udp协议：<br>不可靠传输，“报头”部分一共只有8个字节，总长度不超过65,535字节，正好放进一个IP数据包。<br><img src="/2019/11/15/TCP-IP五层模型/3.png" alt></p>
<p>(五)应用层<br>应用层由来：用户使用的都是应用程序，均工作于应用层，互联网是开发的，大家都可以开发自己的应用程序，数据多种多样，必须规定好数据的组织形式<br>应用层功能：规定应用程序的数据格式。<br>例：TCP协议可以为各种各样的程序传递数据，比如Email、WWW、FTP等等。那么，必须有不同协议规定电子邮件、网页、FTP数据的格式，这些应用程序协议就构成了”应用层”。</p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>TCP/IP五层模型</tag>
      </tags>
  </entry>
  <entry>
    <title>Loadrunner报告简要分析</title>
    <url>/2019/11/05/Loadrunner%E6%8A%A5%E5%91%8A%E7%AE%80%E8%A6%81%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>引言<br>LoadRunner性能测试结果分析是个复杂的过程,通常可以从结果摘要、并发数、平均事务响应时间、每秒点击数、业务成功率、系统资源、网页细分图、Web服务器资源、数据库服务器资源等几个方面分析。<br>(一)结果摘要<br>LoadRunner进行场景测试结果进行分析后概要中列出了场景执行情况：<br>Analysis Summary:分析概要<br>Statistics Summary:统计信息概要表<br>Transaction Summary:事务摘要<br>HTTP Responses Summary:HTTP 响应概要<br><img src="/2019/11/05/Loadrunner报告简要分析/1.jpg" alt><br>1、分析概要<br>Period:时间段<br>Scenario Name:测试场景的名称<br>Results in Scenario:结果存放路径<br>Duration:场景的持续时间<br>本次测试从15:58:40开始,到16:29:42结束,共历时31分2秒。<br><img src="/2019/11/05/Loadrunner报告简要分析/2.jpg" alt><br>2、统计信息概要表<br>Maximum Running Vusers:最大并发数为7<br>Total Throughput(bytes):总吞吐量为842037409字节<br>Average Throughput(bytes/second):平均每秒吞吐量为451979字节<br>Total Hits:总的请求数,即总点击数为211974次<br>Average Hits per Second:平均每秒的请求,即平均点击数为113.781<br>Total error:错误总数<br>单位时间内吞吐量越大,说明服务器的处理能越好,请求数仅表示客户端向服务器发出的请求数,与吞吐量一般是成正比关系。<br><img src="/2019/11/05/Loadrunner报告简要分析/3.jpg" alt><br>3、事务摘要<br>Transcation:事务成功失败数<br>Average Responses Time:平均响应时间<br>4、HTTP 响应概要<br>“HTTP 200”- -表示请求被正确响应<br>“HTTP 404”- -表示文件或者目录未能找到。<br>本部分显示在场景执行过程中,每次HTTP请求发出去的状态- -成功or失败<br>本次测试过程中LoadRunner共模拟发出了211974次请求,其中”HTTP 200”为209811次,而”HTTP 404”为2163,说明在本次测试过程中发出的请求大部分都能正确响应了,仅有部分失败了,但事务成功率为100%<br>出现这样现象的原因是脚本有些页面的请求内容并非关键点,比如可能请求先前的cookie信息,如果没有就重新获取,所以不会影响最终的测试结果。<br><img src="/2019/11/05/Loadrunner报告简要分析/4.jpg" alt><br>常用的HTTP状态代码如下：<br>400 无法解析此请求。<br>401.1 未经授权：访问由于凭据无效被拒绝。<br>401.2 未经授权: 访问由于服务器配置倾向使用替代身份验证方法而被拒绝。<br>401.3 未经授权：访问由于 ACL 对所请求资源的设置被拒绝。<br>401.4 未经授权：Web 服务器上安装的筛选器授权失败。<br>401.5 未经授权：ISAPI/CGI 应用程序授权失败。<br>401.7 未经授权：由于 Web 服务器上的 URL 授权策略而拒绝访问。<br>403 禁止访问：访问被拒绝。<br>403.1 禁止访问：执行访问被拒绝。<br>403.2 禁止访问：读取访问被拒绝。<br>403.3 禁止访问：写入访问被拒绝。<br>403.4 禁止访问：需要使用 SSL 查看该资源。<br>403.5 禁止访问：需要使用 SSL 128 查看该资源。<br>403.6 禁止访问：客户端的 IP 地址被拒绝。<br>403.7 禁止访问：需要 SSL 客户端证书。<br>403.8 禁止访问：客户端的 DNS 名称被拒绝。<br>403.9 禁止访问：太多客户端试图连接到 Web 服务器。<br>403.10 禁止访问：Web 服务器配置为拒绝执行访问。<br>403.11 禁止访问：密码已更改。<br>403.12 禁止访问：服务器证书映射器拒绝了客户端证书访问。<br>403.13 禁止访问：客户端证书已在 Web 服务器上吊销。<br>403.14 禁止访问：在 Web 服务器上已拒绝目录列表。<br>403.15 禁止访问：Web 服务器已超过客户端访问许可证限制。<br>403.16 禁止访问：客户端证书格式错误或未被 Web 服务器信任。<br>403.17 禁止访问：客户端证书已经到期或者尚未生效。<br>403.18 禁止访问：无法在当前应用程序池中执行请求的 URL。<br>403.19 禁止访问：无法在该应用程序池中为客户端执行 CGI。<br>403.20 禁止访问：Passport 登录失败。<br>404 找不到文件或目录。<br>404.1 文件或目录未找到：网站无法在所请求的端口访问。(此错误仅会出现在具有多个IP地址的计算机上)<br>404.2 文件或目录无法找到：锁定策略禁止该请求。<br>404.3 文件或目录无法找到：MIME 映射策略禁止该请求。<br>405 用于访问该页的 HTTP 动作未被许可。<br>406 客户端浏览器不接受所请求页面的 MIME 类型。<br>407 Web 服务器需要初始的代理验证。<br>410 文件已删除。<br>412 客户端设置的前提条件在 Web 服务器上评估时失败。<br>414 请求 URL 太大，因此在 Web 服务器上不接受该 URL。<br>500 服务器内部错误。<br>500.11 服务器错误：Web 服务器上的应用程序正在关闭。<br>500.12 服务器错误：Web 服务器上的应用程序正在重新启动。<br>500.13 服务器错误：Web 服务器太忙。<br>500.14 服务器错误：服务器上的无效应用程序配置。<br>500.15 服务器错误：不允许直接请求 GLOBAL.ASA。<br>500.16 服务器错误：UNC 授权凭据不正确。<br>500.17 服务器错误：URL 授权存储无法找到。<br>500.18 服务器错误：URL 授权存储无法打开。<br>500.19 服务器错误：该文件的数据在配置数据库中配置不正确。<br>500.20 服务器错误：URL 授权域无法找到。<br>500 100 内部服务器错误：ASP 错误。<br>501 标题值指定的配置没有执行。<br>502 Web 服务器作为网关或代理服务器时收到无效的响应。<br>(二)并发数分析<br>Running Vusers- - 运行的并发数,显示了在场景执行过程中并发数的执行情况。<br>图表中显示Vuser的状态、完成脚本的Vuser的数量以及集合统计信息,将这些图与事务图结合使用可以确定Vuser的数量对事务响应时间产生的影响。<br>下图显示了某考勤系统性能测试过程中Vusers运行情况,Vusers的运行趋势与我们场景执行计划中的设置是一样,表明在场景执行过程中，Vusers是按照我们预期的设置运行的,没有Vuser出现运行错误。<br>从另一个侧面说明我们的参数化设置是正确的,因为使用唯一数进行参数化设置,如果设置不正确，将会导致Vuser运行错误。<br><img src="/2019/11/05/Loadrunner报告简要分析/5.jpg" alt><br>测试脚本中我们还使用了集合点,那么这里还可以看看集合点在场景执行过程中的表现,点击左边添加新图<br>展开”Vusers”前的加号,双击“Rendezvous”,即可生成集合点的图形后<br><img src="/2019/11/05/Loadrunner报告简要分析/6.jpg" alt><br>集合点的图形如图所示,从图中可以看到,所有用户到达集合点后,立刻就释放了。<br>与之前设定的集合点策略设置”所有运行用户到达后释放”是一致的。<br>假设Running的Vusers有10个,集合点策略设置是”所有运行用户到达后释放”,而集合点图形显示的最大释放Vusers是7个,那么就表示有些Vuser超时了,引起超时的原因有可能是Vuser得到的响应超时了。<br>而本次测试Running Vusers与集合点是一致,说明整个场景执行过程中,并发数用户的执行正确,测试的系统服务器能够应付7个并发用户的业务操作。<br><img src="/2019/11/05/Loadrunner报告简要分析/7.jpg" alt><br>Ps:loadrunner场景中怎么设置集合点?<br>集合点和事务通常是一起使用,但集合点只能插入事务开始之前,事务中是不能插入集合点的。<br>1、在场景窗口的界面点菜单中的”scenario”<br>2、选择”rendezvous”<br>3、点击”policy”<br>4、设置x个集合点作为并发用户数,进行勾选上vusers arrive at the的一项<br>5、设置完成之后,rendez中开始进行集合,x个过后进行执行脚本。(也可以设置不同策略)</p>
<p>(三)响应时长<br>Average Transaction Response Time- -平均事务响应时间<br>如下图登录部分对应的事务是”submit_login”,提交对应的事务是”submit_sign”,对应的平均响应时间分别是4.425s和0.848s<br>提交的事务响应时间0.848秒小于预期的3秒,达到了要求,而登录是4.425秒去除思考时间,登录功能的实际事务时间应该是4.425s-3s=1.425s,小于预期的3s,故登录的事务响应时间也达到了要求。<br>“90 Percent Time”表示90%的事务服务器的响应都维持在某个值附近,如果平均事务响应时间波动较大,使用”Average Time”其实并不是准确,而使用”90 Percent Time”较准确。<br>如果平均事务响应时间波动较平缓,使用”Average Time”或”90 Percent Time”无区别<br><img src="/2019/11/05/Loadrunner报告简要分析/8.jpg" alt><br>(四)每秒点击数<br>“Hits per Second”- -每秒点击数,反映了客户端每秒钟向服务器端提交的请求数量,与平均每秒吞吐量成正比。<br>从图可以看出,两种图形的曲线基本一致,说明服务器能及时的接受客户端的请求,并能够返回结果。<br>如果”Hits per Second”正常,而”Average Throughput (bytes/second)”不正常,则表示服务器虽然能够接受服务器的请求,但返回结果较慢,有可能是程序处理缓慢的原因。<br>如果”Hits per Second”不正常,则说明客户端存在问题,一般有可能是网络引起的或是录制的脚本有问题,未能正确的模拟用户的行为。<br>一般情况下,这两种指标可以组合来用于性能调优,比如要比较某两种硬件平台的优劣,控制其他变量一致,比较上述两指标可得一个较优的配置。<br><img src="/2019/11/05/Loadrunner报告简要分析/9.jpg" alt><br>(四)业务成功率<br>业务成功率实际上是指”Transaction Summary”中每个事务的成功率。<br>由图可知,所有的事务都是绿色的,即表示为Passed,同时除了vuser_init与vuser_end两个事务,其他的事务通过数为2163,也就表明在30分钟的时间里,共完成了2163次操作。<br>那么根据这些可以判断本次测试登录与提交业务的成功率是100%<br><img src="/2019/11/05/Loadrunner报告简要分析/10.jpg" alt><br>(五)系统资源<br>此信息显示在场景执行过程中被监控的机器系统资源使用情况,一般情况下监控机器的CPU、内存、网络、磁盘等各个方面。<br>本次测试监控的CPU使用率、可用物理内存、CPU的队列长度三个指标的曲线逗较为平滑，三者的平均值分别为：53.582%、83.456M、8.45<br>测试服务器总的物理内存为384M,那么内存使用率为(384-83.456)/384=78.26%<br>根据Windwos资源性能指标的解释,一般如果CPU的队列长度一直超过二,则表示处理器可能堵塞,而得出的数据为8.45,且总体上保持平衡,由此推断测试服务器的CPU达到瓶颈。<br>且场景执行到23分半钟的时候,报出了错误”未找到引用源”,意思是说被监控的服务器当前无法再进行计数器数据的获取了,so本次操作系统资源的监控只得到了场景执行的前23分半钟的数据。<br><img src="/2019/11/05/Loadrunner报告简要分析/11.jpg" alt><br><img src="/2019/11/05/Loadrunner报告简要分析/1.png" alt><br>(六)网页细分图<br>网页细分图可以评估页面内容是否影响事务响应时间。<br>点击左边添加新图,展开”Web Page Diagnostics”前的加号,双击”Page Download Time Breakdown”即可以得到直方图<br><img src="/2019/11/05/Loadrunner报告简要分析/12.jpg" alt><br>下图详细列出了每个页面所消耗的时间分布及指标含义,通过这些指标的数据,我们可以判断是哪个页面、哪个请求导致了响应时间变长,甚至响应失败。<br><img src="/2019/11/05/Loadrunner报告简要分析/13.jpg" alt><br><img src="/2019/11/05/Loadrunner报告简要分析/2.png" alt><br>(七)Web服务器资源(摘)<br>上述所有的监控图形LoadRunner都可以提供,但对于某些测试监控图来说,监控Tomcat、Jboss或者其他的Web服务器可以SiteScope工具,这个工具配置较为复杂。<br>使用ManageEngine Applications Manager 8来监控Tomcat,测试结束后得出Tomcat的JVM使用率如下：<br>从图中我们可以明显看出,Tomcat的JVM使用率不断上升,配置Tomcat时共分配了100M左右的物理内存给其,测试初期使用的JVM相对来说较少,我们的测试场景是从15:58:40开始,到16:29:42结束,历时31分2秒。<br>从图中看到,从16:00到16:30这个时间内,也就是测试场景执行期间,JVM的使用率不断上升,并没有在请求达到均衡状态后也呈现一种平衡状态。<br>所以,从这点可以推断如果测试场景继续执行或者加大并发数,最终必将导致Tomcat内存不够用而报出”Out Of Memory”内存溢出的错误。<br>在正常情况下,内存的使用应该与”Hit per Second”、”Average Throughput (bytes/second)”等监控图的图形走势是一致的。<br><img src="/2019/11/05/Loadrunner报告简要分析/14.jpg" alt><br>从上述过程可以得出一个结论,出现图中的问题,可能有两个原因：<br>1、Tomcat的内存分配不足；<br>2、程序代码有错误，可能导致内存泄露。<br>解决方法：<br>1、为Tomcat分配更多的内存,如果是使用的catalina.sh或Catalina.bat启动的Tomcat,则可在这两个文件中添加“SET CATALINA_OPTS= -Xms300m–Xmx300m”<br>如果使用的winnt服务方式启动的Tomcat,则可在”运行”中输入”regedit”进入注册表，然后在“HKEY_LOCAL_MACHINE–&gt;SOFTWARE–&gt;Apache Software Foundation–&gt;Process Runner 1.0–&gt;Tomcat5–&gt;Parameters”修改两个属性,一个是JvmMs,另外一个是JvmMx<br>2、检查程序代码，使用一些内存泄露检查工具进行清查。<br><img src="/2019/11/05/Loadrunner报告简要分析/15.jpg" alt><br>(八)数据库服务器资源(摘)<br>数据库服务器资源监控相对来说就复杂的多了,现在常用的数据有Mysql、SQL Server、Oracle、DB2等,LoadRunner提供对后面几种数据库的监控方法,但对Mysql没有提供对应的监控方法。数据库如何监控可自行查阅</p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>LR报告分析</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware 15 虚拟机安装 Win 7 系统</title>
    <url>/2019/10/29/VMware-15-%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-Win-7-%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>下载地址：<br>win7 ghost ISO镜像：<a href="https://pan.baidu.com/s/1zMpEhj5g0p5EVqXYi8QmQA" target="_blank" rel="noopener">https://pan.baidu.com/s/1zMpEhj5g0p5EVqXYi8QmQA</a><br>提取码：qv2g</p>
<p>(一)VMW新建虚拟机<br>1、打开VMware,建立一个新的虚拟机<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/1.png" alt><br>2、选择”典型”,点击”下一步”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/2.png" alt><br>3、选择”稍后安装系统”,点击”下一步”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/3.png" alt><br>4、选择”Windows7”,点击”下一步”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/4.png" alt><br>5、选择”浏览”改变安装路径(建议不要安装在C盘),点击”下一步”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/5.png" alt><br>6、设置硬盘大小,可以选择默认60G(博主建议尽量少点,原因请百度),点击”下一步”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/6.png" alt><br>7、点击”自定义硬件”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/7.png" alt><br>8、点击”新CD/DVD”,然后勾选”启动时链接”,选择”使用ISO映像文件”,点击”浏览”,选择下载好的ios镜像文件.点击下面的”高级”,选择”IDE”,点击”确定”。然后点击”关闭”(除上述必须一致,其他配置可依个人喜好设置)<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/8.png" alt><br>9、点击”完成”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/9.png" alt></p>
<p>(二)VMW安装Win7系统<br>1、直接点击界面上绿色的三角开机,进入BIOS系统设置中,直接退出保存即可<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/a.png" alt><br>2、退出BIOS后页面,然后会进入下面的界面,选择”进入PQ分区工具”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/b.png" alt><br>3、出现的对话框中,直接点击作业- -&gt;建立<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/c.png" alt><br>4、如下图选择后,点击确认<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/d.png" alt><br>5、而后点击”执行”,完成后点击”结束”<br>6、然后出现此界面,直接输入”R”回车<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/g.png" alt><br>7、返回Ghost界面,选择”安装Ghost Win7到C盘”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/h.png" alt><br>8、然后会进入下面Windows安装界面,等待安装完成<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/i.png" alt><br>9、安装完成后,出现下面界面<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/j.png" alt><br>10、关机退出<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/k.png" alt><br>11、直接打开Win7虚拟机,再次进入”PQ分区工具”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/l.png" alt><br>12、选定类型为”NTFS”的项,点击”作业”- -&gt;”进阶”- -&gt;”设定为作用”,点击”确认”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/f.png" alt><br>13、然后点击”执行”- -&gt;”结束”<br>14、然后开始安装程序<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/m.png" alt><br>14、直到出现此界面表示安装成功<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/n.png" alt></p>
<p>开启虚拟机时可能弹出如下提示：<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/wrong.png" alt></p>
<p>解决方式：<br>1、进入BIOS模式(不知道Win10怎么进入的请自行百度)<br>2、选择”Security”- -&gt;选择”Virtualization”<br>3、将”Inter (R) Virtualization Technology”设置为”Enabled”<br>4、F10保存并退出,此问题解决</p>
<p>(三)虚拟机未自适应全屏<br>如下图,安装Win7之后虚拟机自适应全屏<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/%E9%9B%B6.png" alt></p>
<p>解决方法：<br>1、虚拟机系统处于启动状态,点击”虚拟机”- -&gt;”安装VMWare Tools”<br>2、运行安装安装vmware tools<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/%E4%B8%80.png" alt><br>3、点击”下一步”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/%E4%BA%8C.png" alt><br>4、选择”典型安装”- -&gt;”下一步”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/%E4%B8%89.png" alt><br>5、点击”安装”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/%E5%9B%9B.png" alt><br>6、点击”完成”<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/%E4%BA%94.png" alt><br>7、安装成功后,虚拟机系统已适应虚拟机窗口大小<br><img src="/2019/10/29/VMware-15-虚拟机安装-Win-7-系统/%E5%85%AD.png" alt><br>Ps:如果仍不能全屏,重启虚拟机,在上方”查看”中选择自适应。</p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>VMW安装Win7</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10 安装VMW虚拟机教程</title>
    <url>/2019/10/28/Win10-%E5%AE%89%E8%A3%85VMW%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>VMW安装教程之前,博主先讲一下缘由及心路历程,由于博主公司的产品响应实在烂的一匹(小声逼逼(ಥ﹏ಥ)…),so博主准备在win10上装一个loadrunner具体测试一下,于是走上了一条不归路…<br>由于对浏览器的兼容及破解等优势,博主果断选择了LR11,经过九九八十一难终于安装好了,奈何LR11不兼容win10自带的IE11(此处应有吐槽),想到LR bin文件下有自带Firefox(博主太机智了O(∩_∩)O)…<br>直接拉出来录个脚本试试,纳尼？经常崩溃,难道版本太低？果断换个Firefox 24.0 again…上来报错”couldn’t load xpcom”,What the FUCK!!!!<br>论坛遛遛,吃瓜群众也没有啥好的解决办法,听说Win10牛B的系统自带虚拟机Hyper-V于是打算试试…<br>一看发现没有Hyper-V,什么情况？一查原来win10家庭版需要自己安装,无语…<br>想到VMware比较强大,果断改换安装VMW。<br>好了,以上就是博主的心路历程及悲惨遭遇,下面不多bb,博主将安装的具体步骤分享出来希望可以对想要安装VMW的同学有所帮助</p>
<p>下载地址：<br>VMware15(32/64)位：<a href="https://pan.baidu.com/s/1WHeqpZkUJBm63hupu9hgRw" target="_blank" rel="noopener">https://pan.baidu.com/s/1WHeqpZkUJBm63hupu9hgRw</a><br>提取码：qvry<br>格式不转了,美观方面凑合看吧…</p>
<p>(一)VMware15虚拟机安装教程<br>1、下载好VMware15并解压后,运行VMware-15.exe<br><img src="/2019/10/28/Win10-安装VMW虚拟机教程/1.png" alt><br>2、下一步<br>3、勾选”接受相关协议”,下一步<br>4、点击”更改”更改软件的安装目录,建议不要安在C盘,点击下一步<br><img src="/2019/10/28/Win10-安装VMW虚拟机教程/2.png" alt><br>5、取消勾选，然后点击下一步,如图<br><img src="/2019/10/28/Win10-安装VMW虚拟机教程/3.png" alt><br>6、点击下一步<br>7、点击安装<br>8、安装中,稍等一会…<br>9、点击许可证<br><img src="/2019/10/28/Win10-安装VMW虚拟机教程/4.png" alt><br>10、在框中输入“FC502-8AD82-08D4P-4FQEE-ZC8D0”然后点击”输入”<br><img src="/2019/10/28/Win10-安装VMW虚拟机教程/5.png" alt><br>11、点击完成即可安装成功</p>
<p>在下一篇blog中博主会分享VMW虚拟机上安装Win7系统的方法</p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>Win10安装虚拟机</tag>
      </tags>
  </entry>
</search>
